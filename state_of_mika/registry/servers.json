[
  {
    "id": "brave_search",
    "name": "Brave Search",
    "description": "Web search capabilities using Brave's Search API",
    "type": "local",
    "command": "npx",
    "args": [
      "@modelcontextprotocol/server-brave-search"
    ],
    "packageName": "@modelcontextprotocol/server-brave-search",
    "installType": "npm",
    "tags": [
      "search",
      "web"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/brave-search"
  },
  {
    "id": "filesystem",
    "name": "Filesystem",
    "description": "Secure file operations with configurable access controls",
    "type": "local",
    "command": "npx",
    "args": [
      "@modelcontextprotocol/server-filesystem"
    ],
    "packageName": "@modelcontextprotocol/server-filesystem",
    "installType": "npm",
    "tags": [
      "files",
      "io"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/filesystem"
  },
  {
    "id": "postgres",
    "name": "PostgreSQL",
    "description": "PostgreSQL database integration with schema inspection and query capabilities",
    "type": "local",
    "command": "npx",
    "args": [
      "@modelcontextprotocol/server-postgres"
    ],
    "packageName": "@modelcontextprotocol/server-postgres",
    "installType": "npm",
    "tags": [
      "database",
      "sql"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/postgres"
  },
  {
    "id": "github",
    "name": "GitHub",
    "description": "GitHub API integration for repository management, PRs, issues, and more",
    "type": "local",
    "command": "npx",
    "args": [
      "@modelcontextprotocol/server-github"
    ],
    "packageName": "@modelcontextprotocol/server-github",
    "installType": "npm",
    "tags": [
      "github",
      "git",
      "code"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/github"
  },
  {
    "id": "fetch",
    "name": "Fetch",
    "description": "Efficient web content fetching and processing for AI consumption",
    "type": "local",
    "command": "npx",
    "args": [
      "@modelcontextprotocol/server-fetch"
    ],
    "packageName": "@modelcontextprotocol/server-fetch",
    "installType": "npm",
    "tags": [
      "web",
      "http"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/fetch"
  },
  {
    "id": "memory",
    "name": "Memory",
    "description": "Knowledge graph-based persistent memory system for maintaining context",
    "type": "local",
    "command": "npx",
    "args": [
      "@modelcontextprotocol/server-memory"
    ],
    "packageName": "@modelcontextprotocol/server-memory",
    "installType": "npm",
    "tags": [
      "memory",
      "knowledge"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/memory"
  },
  {
    "id": "google_maps",
    "name": "Google Maps",
    "description": "Google Maps integration for location services, routing, and place details",
    "type": "local",
    "command": "npx",
    "args": [
      "@modelcontextprotocol/server-google-maps"
    ],
    "packageName": "@modelcontextprotocol/server-google-maps",
    "installType": "npm",
    "tags": [
      "maps",
      "geo"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/google-maps"
  },
  {
    "id": "sqlite",
    "name": "SQLite",
    "description": "SQLite database operations with built-in analysis features",
    "type": "local",
    "command": "npx",
    "args": [
      "@modelcontextprotocol/server-sqlite"
    ],
    "packageName": "@modelcontextprotocol/server-sqlite",
    "installType": "npm",
    "tags": [
      "database",
      "sqlite"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/sqlite"
  },
  {
    "id": "google_drive",
    "name": "Google Drive",
    "description": "Google Drive integration for listing, reading, and searching files",
    "type": "local",
    "command": "npx",
    "args": [
      "@modelcontextprotocol/server-google-drive"
    ],
    "packageName": "@modelcontextprotocol/server-google-drive",
    "installType": "npm",
    "tags": [
      "files",
      "google"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/gdrive"
  },
  {
    "id": "git",
    "name": "Git",
    "description": "Direct Git repository operations including reading, searching, and analyzing local repositories",
    "type": "local",
    "command": "npx",
    "args": [
      "@modelcontextprotocol/server-git"
    ],
    "packageName": "@modelcontextprotocol/server-git",
    "installType": "npm",
    "tags": [
      "git",
      "version-control"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/git"
  },
  {
    "id": "sentry",
    "name": "Sentry",
    "description": "Sentry.io integration for error tracking and performance monitoring",
    "type": "local",
    "command": "npx",
    "args": [
      "@modelcontextprotocol/server-sentry"
    ],
    "packageName": "@modelcontextprotocol/server-sentry",
    "installType": "npm",
    "tags": [
      "monitoring",
      "errors"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/sentry"
  },
  {
    "id": "mcp_youtube",
    "name": "YouTube",
    "description": "Download and analyze YouTube video content and subtitles",
    "type": "local",
    "command": "npx",
    "args": [
      "mcp-youtube"
    ],
    "packageName": "mcp-youtube",
    "installType": "npm",
    "tags": [
      "video",
      "youtube"
    ],
    "sourceUrl": "https://github.com/anaisbetts/mcp-youtube"
  },
  {
    "id": "weather",
    "name": "Weather",
    "description": "Weather forecasts and alerts from the National Weather Service",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "mcp_weather"
    ],
    "packageName": "mcp-weather",
    "installType": "pip",
    "tags": [
      "weather",
      "forecast"
    ],
    "sourceUrl": "https://github.com/jlowin/fastmcp/tree/main/examples/weather"
  },
  {
    "id": "duckduckgo",
    "name": "DuckDuckGo",
    "description": "Web search using DuckDuckGo",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "duckduckgo_mcp_server"
    ],
    "packageName": "duckduckgo-mcp-server",
    "installType": "pip",
    "tags": [
      "search",
      "web"
    ],
    "sourceUrl": "https://github.com/nickclyde/duckduckgo-mcp-server"
  },
  {
    "id": "puppeteer",
    "name": "Puppeteer",
    "description": "Browser automation for web scraping and interaction",
    "type": "local",
    "command": "npx",
    "args": [
      "@modelcontextprotocol/server-puppeteer"
    ],
    "packageName": "@modelcontextprotocol/server-puppeteer",
    "installType": "npm",
    "tags": [
      "browser",
      "automation"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/puppeteer"
  },
  {
    "id": "playwright_python",
    "name": "Playwright Python",
    "description": "An MCP python server using Playwright for browser automation",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "playwright_python_mcp"
    ],
    "packageName": "playwright-plus-python-mcp",
    "installType": "pip",
    "tags": [
      "browser",
      "automation"
    ],
    "sourceUrl": "https://github.com/blackwhite084/playwright-plus-python-mcp"
  },
  {
    "id": "playwright_mcp",
    "name": "Playwright MCP",
    "description": "An MCP server using Playwright for browser automation and webscrapping",
    "type": "local",
    "command": "npx",
    "args": [
      "playwright-mcp-server"
    ],
    "packageName": "playwright-mcp-server",
    "installType": "npm",
    "tags": [
      "browser",
      "automation",
      "webscraping"
    ],
    "sourceUrl": "https://github.com/executeautomation/mcp-playwright"
  },
  {
    "id": "automata_playwright",
    "name": "Automata Playwright",
    "description": "An MCP server for browser automation using Playwright",
    "type": "local",
    "command": "npx",
    "args": [
      "@automatalabs/mcp-server-playwright"
    ],
    "packageName": "@automatalabs/mcp-server-playwright",
    "installType": "npm",
    "tags": [
      "browser",
      "automation"
    ],
    "sourceUrl": "https://github.com/Automata-Labs-team/MCP-Server-Playwright"
  },
  {
    "id": "youtube_transcript",
    "name": "YouTube Transcript",
    "description": "Fetch YouTube subtitles and transcripts for AI analysis",
    "type": "remote",
    "command": "npx",
    "args": [
      "@kimtaeyoon83/mcp-server-youtube-transcript"
    ],
    "packageName": "@kimtaeyoon83/mcp-server-youtube-transcript",
    "installType": "npm",
    "tags": [
      "youtube",
      "transcripts",
      "subtitles"
    ],
    "sourceUrl": "https://github.com/kimtaeyoon83/mcp-server-youtube-transcript"
  },
  {
    "id": "apple_shortcuts",
    "name": "Apple Shortcuts",
    "description": "An MCP Server Integration with Apple Shortcuts",
    "type": "local",
    "command": "npx",
    "args": [
      "@recursechat/mcp-server-apple-shortcuts"
    ],
    "packageName": "@recursechat/mcp-server-apple-shortcuts",
    "installType": "npm",
    "tags": [
      "apple",
      "shortcuts",
      "automation"
    ],
    "sourceUrl": "https://github.com/recursechat/mcp-server-apple-shortcuts"
  },
  {
    "id": "aoai_web_browsing",
    "name": "AOAI Web Browsing",
    "description": "A minimal server/client MCP implementation using Azure OpenAI and Playwright",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "mcp_aoai_web_browsing"
    ],
    "packageName": "mcp-aoai-web-browsing",
    "installType": "pip",
    "tags": [
      "web",
      "browsing",
      "azure",
      "openai"
    ],
    "sourceUrl": "https://github.com/kimtth/mcp-aoai-web-browsing"
  },
  {
    "id": "web_search",
    "name": "Web Search",
    "description": "An MCP server that enables free web searching using Google search results, with no API keys required",
    "type": "local",
    "command": "npx",
    "args": [
      "@pskill9/web-search"
    ],
    "packageName": "@pskill9/web-search",
    "installType": "npm",
    "tags": [
      "search",
      "web",
      "google"
    ],
    "sourceUrl": "https://github.com/pskill9/web-search"
  },
  {
    "id": "browser_use",
    "name": "Browser Use",
    "description": "Browser-use packaged as an MCP server with SSE transport including a dockerfile to run chromium in docker + a vnc server",
    "type": "local",
    "command": "npx",
    "args": [
      "@co-browser/browser-use-mcp-server"
    ],
    "packageName": "@co-browser/browser-use-mcp-server",
    "installType": "npm",
    "tags": [
      "browser",
      "docker",
      "vnc"
    ],
    "sourceUrl": "https://github.com/co-browser/browser-use-mcp-server"
  },
  {
    "id": "video_editing",
    "name": "Video Editing",
    "description": "Add, Analyze, Search, and Generate Video Edits from your Video Jungle Collection",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "video_editing_mcp"
    ],
    "packageName": "video-editing-mcp",
    "installType": "pip",
    "tags": [
      "video",
      "editing",
      "media"
    ],
    "sourceUrl": "https://github.com/burningion/video-editing-mcp"
  },
  {
    "id": "rijksmuseum",
    "name": "Rijksmuseum",
    "description": "Rijksmuseum API integration for artwork search, details, and collections",
    "type": "remote",
    "command": "npx",
    "args": [
      "rijksmuseum-mcp"
    ],
    "packageName": "rijksmuseum-mcp",
    "installType": "npm",
    "tags": [
      "art",
      "museum",
      "api"
    ],
    "sourceUrl": "https://github.com/r-huijts/rijksmuseum-mcp"
  },
  {
    "id": "cloudflare",
    "name": "Cloudflare",
    "description": "Integration with Cloudflare services including Workers, KV, R2, and D1",
    "type": "remote",
    "command": "npx",
    "args": [
      "@cloudflare/mcp-server"
    ],
    "packageName": "@cloudflare/mcp-server",
    "installType": "npm",
    "tags": [
      "cloud",
      "hosting",
      "api"
    ],
    "sourceUrl": "https://github.com/cloudflare/mcp-server-cloudflare"
  },
  {
    "id": "kubernetes_go",
    "name": "Kubernetes Go",
    "description": "Kubernetes cluster operations through MCP (Go implementation)",
    "type": "local",
    "command": "mcp-k8s-go",
    "args": [],
    "packageName": "mcp-k8s-go",
    "installType": "go",
    "tags": [
      "kubernetes",
      "cloud",
      "container"
    ],
    "sourceUrl": "https://github.com/strowk/mcp-k8s-go"
  },
  {
    "id": "kubernetes_ts",
    "name": "Kubernetes TypeScript",
    "description": "Typescript implementation of Kubernetes cluster operations for pods, deployments, services",
    "type": "remote",
    "command": "npx",
    "args": [
      "@flux159/mcp-server-kubernetes"
    ],
    "packageName": "@flux159/mcp-server-kubernetes",
    "installType": "npm",
    "tags": [
      "kubernetes",
      "cloud",
      "container"
    ],
    "sourceUrl": "https://github.com/Flux159/mcp-server-kubernetes"
  },
  {
    "id": "kubernetes_openshift",
    "name": "Kubernetes OpenShift",
    "description": "A powerful Kubernetes MCP server with additional support for OpenShift",
    "type": "local",
    "command": "kubernetes-mcp-server",
    "args": [],
    "packageName": "kubernetes-mcp-server",
    "installType": "go",
    "tags": [
      "kubernetes",
      "openshift",
      "container"
    ],
    "sourceUrl": "https://github.com/manusa/kubernetes-mcp-server"
  },
  {
    "id": "netskope",
    "name": "Netskope",
    "description": "An MCP to give access to all Netskope Private Access components within a Netskope Private Access environments",
    "type": "remote",
    "command": "npx",
    "args": [
      "netskope-mcp"
    ],
    "packageName": "netskope-mcp",
    "installType": "npm",
    "tags": [
      "security",
      "access",
      "network"
    ],
    "sourceUrl": "https://github.com/johnneerdael/netskope-mcp"
  },
  {
    "id": "terraform",
    "name": "Terraform",
    "description": "A Terraform MCP server allowing AI assistants to manage and operate Terraform environments",
    "type": "local",
    "command": "tfmcp",
    "args": [],
    "packageName": "tfmcp",
    "installType": "cargo",
    "tags": [
      "terraform",
      "infrastructure",
      "devops"
    ],
    "sourceUrl": "https://github.com/nwiizo/tfmcp"
  },
  {
    "id": "iterm",
    "name": "iTerm",
    "description": "A Model Context Protocol server that provides access to iTerm",
    "type": "local",
    "command": "npx",
    "args": [
      "iterm-mcp"
    ],
    "packageName": "iterm-mcp",
    "installType": "npm",
    "tags": [
      "terminal",
      "command-line",
      "macos"
    ],
    "sourceUrl": "https://github.com/ferrislucas/iterm-mcp"
  },
  {
    "id": "commands",
    "name": "Commands",
    "description": "Run any command with run_command and run_script tools",
    "type": "local",
    "command": "npx",
    "args": [
      "mcp-server-commands"
    ],
    "packageName": "mcp-server-commands",
    "installType": "npm",
    "tags": [
      "command-line",
      "script",
      "execution"
    ],
    "sourceUrl": "https://github.com/g0t4/mcp-server-commands"
  },
  {
    "id": "cli_interface",
    "name": "CLI Interface",
    "description": "Command line interface with secure execution and customizable security policies",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "cli_mcp_server"
    ],
    "packageName": "cli-mcp-server",
    "installType": "pip",
    "tags": [
      "command-line",
      "cli",
      "security"
    ],
    "sourceUrl": "https://github.com/MladenSU/cli-mcp-server"
  },
  {
    "id": "shell_server",
    "name": "Shell Server",
    "description": "A secure shell command execution server implementing the Model Context Protocol",
    "type": "local",
    "command": "npx",
    "args": [
      "mcp-shell-server"
    ],
    "packageName": "mcp-shell-server",
    "installType": "npm",
    "tags": [
      "shell",
      "command",
      "execution"
    ],
    "sourceUrl": "https://github.com/tumf/mcp-shell-server"
  },
  {
    "id": "google_tasks",
    "name": "Google Tasks",
    "description": "An MCP server to Manage Google Tasks",
    "type": "remote",
    "command": "npx",
    "args": [
      "gtasks-mcp"
    ],
    "packageName": "gtasks-mcp",
    "installType": "npm",
    "tags": [
      "google",
      "tasks",
      "productivity"
    ],
    "sourceUrl": "https://github.com/zcaceres/gtasks-mcp"
  },
  {
    "id": "imessage",
    "name": "iMessage",
    "description": "An MCP server that provides safe access to your iMessage database through Model Context Protocol",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "imessage_query_fastmcp_mcp_server"
    ],
    "packageName": "imessage-query-fastmcp-mcp-server",
    "installType": "pip",
    "tags": [
      "imessage",
      "messages",
      "macos"
    ],
    "sourceUrl": "https://github.com/hannesrudolph/imessage-query-fastmcp-mcp-server"
  },
  {
    "id": "slack",
    "name": "Slack",
    "description": "Slack workspace integration for channel management and messaging",
    "type": "remote",
    "command": "npx",
    "args": [
      "@modelcontextprotocol/server-slack"
    ],
    "packageName": "@modelcontextprotocol/server-slack",
    "installType": "npm",
    "tags": [
      "slack",
      "messaging",
      "communication"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/slack"
  },
  {
    "id": "bluesky",
    "name": "Bluesky",
    "description": "Bluesky instance integration for querying and interaction",
    "type": "remote",
    "command": "npx",
    "args": [
      "@modelcontextprotocol/server-bluesky"
    ],
    "packageName": "@modelcontextprotocol/server-bluesky",
    "installType": "npm",
    "tags": [
      "bluesky",
      "social",
      "media"
    ],
    "sourceUrl": "https://github.com/keturiosakys/bluesky-context-server"
  },
  {
    "id": "gsuite",
    "name": "GSuite",
    "description": "Integration with gmail and Google Calendar",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_gsuite"
    ],
    "packageName": "mcp-gsuite",
    "installType": "pip",
    "tags": [
      "google",
      "gmail",
      "calendar"
    ],
    "sourceUrl": "https://github.com/MarkusPfundstein/mcp-gsuite"
  },
  {
    "id": "twitter",
    "name": "Twitter (Twikit)",
    "description": "Interact with Twitter search and timeline",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_twikit"
    ],
    "packageName": "mcp-twikit",
    "installType": "pip",
    "tags": [
      "twitter",
      "social",
      "media"
    ],
    "sourceUrl": "https://github.com/adhikasp/mcp-twikit"
  },
  {
    "id": "elasticsearch",
    "name": "Elasticsearch",
    "description": "MCP Server implementation that provides Elasticsearch interaction",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "elasticsearch_mcp_server"
    ],
    "packageName": "elasticsearch-mcp-server",
    "installType": "pip",
    "tags": [
      "elasticsearch",
      "search",
      "database"
    ],
    "sourceUrl": "https://github.com/cr7258/elasticsearch-mcp-server"
  },
  {
    "id": "airtable",
    "name": "Airtable",
    "description": "Airtable database integration with schema inspection, read and write capabilities",
    "type": "local",
    "command": "npx",
    "args": [
      "airtable-mcp-server"
    ],
    "packageName": "airtable-mcp-server",
    "installType": "npm",
    "tags": [
      "airtable",
      "database",
      "records"
    ],
    "sourceUrl": "https://github.com/domdomegg/airtable-mcp-server"
  },
  {
    "id": "bigquery",
    "name": "BigQuery",
    "description": "BigQuery database integration with schema inspection and query capabilities",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_server_bigquery"
    ],
    "packageName": "mcp-server-bigquery",
    "installType": "pip",
    "tags": [
      "bigquery",
      "database",
      "google"
    ],
    "sourceUrl": "https://github.com/LucasHild/mcp-server-bigquery"
  },
  {
    "id": "tidb",
    "name": "TiDB",
    "description": "TiDB database integration with schema inspection and query capabilities",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_server_tidb"
    ],
    "packageName": "mcp-server-tidb",
    "installType": "pip",
    "tags": [
      "tidb",
      "database",
      "sql"
    ],
    "sourceUrl": "https://github.com/c4pt0r/mcp-server-tidb"
  },
  {
    "id": "bigquery_ergut",
    "name": "BigQuery by Ergut",
    "description": "Server implementation for Google BigQuery integration that enables direct BigQuery database access and querying capabilities",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-bigquery-server"
    ],
    "packageName": "mcp-bigquery-server",
    "installType": "npm",
    "tags": [
      "bigquery",
      "database",
      "google"
    ],
    "sourceUrl": "https://github.com/ergut/mcp-bigquery-server"
  },
  {
    "id": "clickhouse",
    "name": "ClickHouse",
    "description": "ClickHouse database integration with schema inspection and query capabilities",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_clickhouse"
    ],
    "packageName": "mcp-clickhouse",
    "installType": "pip",
    "tags": [
      "clickhouse",
      "database",
      "analytics"
    ],
    "sourceUrl": "https://github.com/ClickHouse/mcp-clickhouse"
  },
  {
    "id": "convex",
    "name": "Convex",
    "description": "Convex database integration to introspect tables, functions, and run oneoff queries",
    "type": "remote",
    "command": "npx",
    "args": [
      "convex-mcp-server"
    ],
    "packageName": "convex-mcp-server",
    "installType": "npm",
    "tags": [
      "convex",
      "database",
      "serverless"
    ],
    "sourceUrl": "https://github.com/get-convex/convex-backend/blob/main/npm-packages/convex/src/cli/mcp.ts"
  },
  {
    "id": "firebase",
    "name": "Firebase",
    "description": "Firebase services including Auth, Firestore and Storage",
    "type": "remote",
    "command": "npx",
    "args": [
      "firebase-mcp"
    ],
    "packageName": "firebase-mcp",
    "installType": "npm",
    "tags": [
      "firebase",
      "firestore",
      "storage"
    ],
    "sourceUrl": "https://github.com/gannonh/firebase-mcp"
  },
  {
    "id": "timeplus",
    "name": "Timeplus",
    "description": "MCP server for Apache Kafka and Timeplus",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_timeplus"
    ],
    "packageName": "mcp-timeplus",
    "installType": "pip",
    "tags": [
      "kafka",
      "timeplus",
      "streaming"
    ],
    "sourceUrl": "https://github.com/jovezhong/mcp-timeplus"
  },
  {
    "id": "fireproof",
    "name": "Fireproof",
    "description": "Fireproof ledger database with multi-user sync",
    "type": "remote",
    "command": "npx",
    "args": [
      "@fireproof-storage/mcp-database-server"
    ],
    "packageName": "@fireproof-storage/mcp-database-server",
    "installType": "npm",
    "tags": [
      "fireproof",
      "database",
      "sync"
    ],
    "sourceUrl": "https://github.com/fireproof-storage/mcp-database-server"
  },
  {
    "id": "mysql_designcomputer",
    "name": "MySQL by DesignComputer",
    "description": "MySQL database integration with configurable access controls, schema inspection, and comprehensive security guidelines",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "mysql_mcp_server"
    ],
    "packageName": "mysql_mcp_server",
    "installType": "pip",
    "tags": [
      "mysql",
      "database",
      "sql"
    ],
    "sourceUrl": "https://github.com/designcomputer/mysql_mcp_server"
  },
  {
    "id": "mysql_f4ww4z",
    "name": "MySQL by F4ww4z",
    "description": "Node.js-based MySQL database integration that provides secure MySQL database operations",
    "type": "local",
    "command": "npx",
    "args": [
      "mcp-mysql-server"
    ],
    "packageName": "mcp-mysql-server",
    "installType": "npm",
    "tags": [
      "mysql",
      "database",
      "sql"
    ],
    "sourceUrl": "https://github.com/f4ww4z/mcp-mysql-server"
  },
  {
    "id": "supabase_joshuariley",
    "name": "Supabase by JoshuaRiley",
    "description": "Supabase MCP Server for managing and creating projects and organisations in Supabase",
    "type": "remote",
    "command": "npx",
    "args": [
      "supabase-mcp-server"
    ],
    "packageName": "supabase-mcp-server",
    "installType": "npm",
    "tags": [
      "supabase",
      "database",
      "cloud"
    ],
    "sourceUrl": "https://github.com/joshuarileydev/supabase"
  },
  {
    "id": "supabase_zuev",
    "name": "Supabase by Alexander Zuev",
    "description": "Supabase MCP Server with support for SQL query execution and database exploration tools",
    "type": "remote",
    "command": "npx",
    "args": [
      "@alexanderzuev/supabase-mcp-server"
    ],
    "packageName": "@alexanderzuev/supabase-mcp-server",
    "installType": "npm",
    "tags": [
      "supabase",
      "database",
      "sql"
    ],
    "sourceUrl": "https://github.com/alexander-zuev/supabase-mcp-server"
  },
  {
    "id": "duckdb",
    "name": "DuckDB",
    "description": "DuckDB database integration with schema inspection and query capabilities",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "mcp_server_duckdb"
    ],
    "packageName": "mcp-server-duckdb",
    "installType": "pip",
    "tags": [
      "duckdb",
      "database",
      "analytics"
    ],
    "sourceUrl": "https://github.com/ktanaka101/mcp-server-duckdb"
  },
  {
    "id": "trino",
    "name": "Trino",
    "description": "Trino MCP Server to query and access data from Trino Clusters",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_server_trino"
    ],
    "packageName": "mcp-server-trino",
    "installType": "pip",
    "tags": [
      "trino",
      "database",
      "sql"
    ],
    "sourceUrl": "https://github.com/Dataring-engineering/mcp-server-trino"
  },
  {
    "id": "mongodb_lens",
    "name": "MongoDB Lens",
    "description": "Full Featured MCP Server for MongoDB Databases",
    "type": "local",
    "command": "npx",
    "args": [
      "mongodb-lens"
    ],
    "packageName": "mongodb-lens",
    "installType": "npm",
    "tags": [
      "mongodb",
      "database",
      "nosql"
    ],
    "sourceUrl": "https://github.com/furey/mongodb-lens"
  },
  {
    "id": "mongodb_quantgeek",
    "name": "MongoDB by QuantGeek",
    "description": "MongoDB integration that enables LLMs to interact directly with databases",
    "type": "local",
    "command": "npx",
    "args": [
      "mongo-mcp"
    ],
    "packageName": "mongo-mcp",
    "installType": "npm",
    "tags": [
      "mongodb",
      "database",
      "nosql"
    ],
    "sourceUrl": "https://github.com/QuantGeekDev/mongo-mcp"
  },
  {
    "id": "mongodb_kilicz",
    "name": "MongoDB by Kilicz",
    "description": "A Model Context Protocol Server for MongoDB",
    "type": "local",
    "command": "npx",
    "args": [
      "mcp-mongo-server"
    ],
    "packageName": "mcp-mongo-server",
    "installType": "npm",
    "tags": [
      "mongodb",
      "database",
      "nosql"
    ],
    "sourceUrl": "https://github.com/kiliczsh/mcp-mongo-server"
  },
  {
    "id": "tinybird",
    "name": "Tinybird",
    "description": "Tinybird integration with query and API capabilities",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_tinybird"
    ],
    "packageName": "mcp-tinybird",
    "installType": "pip",
    "tags": [
      "tinybird",
      "analytics",
      "database"
    ],
    "sourceUrl": "https://github.com/tinybirdco/mcp-tinybird"
  },
  {
    "id": "vikingdb",
    "name": "VikingDB",
    "description": "VikingDB integration with collection and index introduction, vector store and search capabilities",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "vikingdb_mcp_server"
    ],
    "packageName": "vikingdb-mcp-server",
    "installType": "pip",
    "tags": [
      "vikingdb",
      "vector",
      "database"
    ],
    "sourceUrl": "https://github.com/KashiwaByte/vikingdb-mcp-server"
  },
  {
    "id": "neo4j",
    "name": "Neo4j",
    "description": "Model Context Protocol with Neo4j",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "mcp_neo4j"
    ],
    "packageName": "mcp-neo4j",
    "installType": "pip",
    "tags": [
      "neo4j",
      "graph",
      "database"
    ],
    "sourceUrl": "https://github.com/neo4j-contrib/mcp-neo4j"
  },
  {
    "id": "nile",
    "name": "Nile",
    "description": "MCP server for Nile's Postgres platform - Manage and query Postgres databases, tenants, users, auth using LLMs",
    "type": "remote",
    "command": "npx",
    "args": [
      "nile-mcp-server"
    ],
    "packageName": "nile-mcp-server",
    "installType": "npm",
    "tags": [
      "nile",
      "postgres",
      "tenants"
    ],
    "sourceUrl": "https://github.com/niledatabase/nile-mcp-server"
  },
  {
    "id": "snowflake",
    "name": "Snowflake",
    "description": "Snowflake integration implementing read and (optional) write operations as well as insight tracking",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_snowflake_server"
    ],
    "packageName": "mcp-snowflake-server",
    "installType": "pip",
    "tags": [
      "snowflake",
      "database",
      "analytics"
    ],
    "sourceUrl": "https://github.com/isaacwasserman/mcp-snowflake-server"
  },
  {
    "id": "sqlite_explorer",
    "name": "SQLite Explorer",
    "description": "An MCP server that provides safe, read-only access to SQLite databases through Model Context Protocol",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "sqlite_explorer_fastmcp_mcp_server"
    ],
    "packageName": "sqlite-explorer-fastmcp-mcp-server",
    "installType": "pip",
    "tags": [
      "sqlite",
      "database",
      "explorer"
    ],
    "sourceUrl": "https://github.com/hannesrudolph/sqlite-explorer-fastmcp-mcp-server"
  },
  {
    "id": "pinecone",
    "name": "Pinecone",
    "description": "Pinecone integration with vector search capabilities",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_pinecone"
    ],
    "packageName": "mcp-pinecone",
    "installType": "pip",
    "tags": [
      "pinecone",
      "vector",
      "database"
    ],
    "sourceUrl": "https://github.com/sirmews/mcp-pinecone"
  },
  {
    "id": "alchemy",
    "name": "SQLAlchemy",
    "description": "Universal SQLAlchemy-based database integration supporting PostgreSQL, MySQL, MariaDB, SQLite, Oracle, MS SQL Server and many more databases",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "mcp_alchemy"
    ],
    "packageName": "mcp-alchemy",
    "installType": "pip",
    "tags": [
      "sqlalchemy",
      "database",
      "sql"
    ],
    "sourceUrl": "https://github.com/runekaagaard/mcp-alchemy"
  },
  {
    "id": "jdbc",
    "name": "JDBC",
    "description": "Connect to any JDBC-compatible database and query, insert, update, delete, and more",
    "type": "local",
    "command": "java",
    "args": [
      "-jar",
      "mcp-server-jdbc.jar"
    ],
    "packageName": "mcp-server-jdbc",
    "installType": "java",
    "tags": [
      "jdbc",
      "database",
      "java"
    ],
    "sourceUrl": "https://github.com/quarkiverse/quarkus-mcp-servers/tree/main/jdbc"
  },
  {
    "id": "azure_data_explorer",
    "name": "Azure Data Explorer",
    "description": "Query and analyze Azure Data Explorer databases",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "adx_mcp_server"
    ],
    "packageName": "adx-mcp-server",
    "installType": "pip",
    "tags": [
      "azure",
      "data-explorer",
      "analytics"
    ],
    "sourceUrl": "https://github.com/pab1it0/adx-mcp-server"
  },
  {
    "id": "neon",
    "name": "Neon",
    "description": "An MCP Server for creating and managing Postgres databases using Neon Serverless Postgres",
    "type": "remote",
    "command": "npx",
    "args": [
      "@neondatabase/mcp-server-neon"
    ],
    "packageName": "@neondatabase/mcp-server-neon",
    "installType": "npm",
    "tags": [
      "neon",
      "postgres",
      "serverless"
    ],
    "sourceUrl": "https://github.com/neondatabase/mcp-server-neon"
  },
  {
    "id": "xiyan_sql",
    "name": "XiyanSQL",
    "description": "An MCP server that supports fetching data from a database using natural language queries, powered by XiyanSQL as the text-to-SQL LLM",
    "type": "remote",
    "command": "npx",
    "args": [
      "@XGenerationLab/xiyan_mcp_server"
    ],
    "packageName": "@XGenerationLab/xiyan_mcp_server",
    "installType": "npm",
    "tags": [
      "sql",
      "natural-language",
      "database"
    ],
    "sourceUrl": "https://github.com/XGenerationLab/xiyan_mcp_server"
  },
  {
    "id": "dbhub",
    "name": "DBHub",
    "description": "Universal database MCP server supporting mainstream databases",
    "type": "local",
    "command": "npx",
    "args": [
      "@bytebase/dbhub"
    ],
    "packageName": "@bytebase/dbhub",
    "installType": "npm",
    "tags": [
      "database",
      "universal",
      "multiple"
    ],
    "sourceUrl": "https://github.com/bytebase/dbhub"
  },
  {
    "id": "greptimedb",
    "name": "GreptimeDB",
    "description": "MCP Server for querying GreptimeDB",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "greptimedb_mcp_server"
    ],
    "packageName": "greptimedb-mcp-server",
    "installType": "pip",
    "tags": [
      "greptimedb",
      "timeseries",
      "database"
    ],
    "sourceUrl": "https://github.com/GreptimeTeam/greptimedb-mcp-server"
  },
  {
    "id": "magic_ui",
    "name": "Magic UI",
    "description": "Create crafted UI components inspired by the best 21st.dev design engineers",
    "type": "remote",
    "command": "npx",
    "args": [
      "@21st-dev/magic-mcp"
    ],
    "packageName": "@21st-dev/magic-mcp",
    "installType": "npm",
    "tags": [
      "ui",
      "design",
      "components"
    ],
    "sourceUrl": "https://github.com/21st-dev/magic-mcp"
  },
  {
    "id": "opik",
    "name": "Opik",
    "description": "Talk to your LLM observability, traces and monitoring captured by Opik using natural language",
    "type": "local",
    "command": "npx",
    "args": [
      "@comet-ml/opik-mcp"
    ],
    "packageName": "@comet-ml/opik-mcp",
    "installType": "npm",
    "tags": [
      "monitoring",
      "observability",
      "llm"
    ],
    "sourceUrl": "https://github.com/comet-ml/opik-mcp"
  },
  {
    "id": "figma_context",
    "name": "Figma Context",
    "description": "Provide coding agents direct access to Figma data to help them one-shot design implementation",
    "type": "local",
    "command": "npx",
    "args": [
      "figma-context-mcp"
    ],
    "packageName": "figma-context-mcp",
    "installType": "npm",
    "tags": [
      "figma",
      "design",
      "implementation"
    ],
    "sourceUrl": "https://github.com/GLips/Figma-Context-MCP"
  },
  {
    "id": "docker",
    "name": "Docker",
    "description": "Docker container management and operations through MCP",
    "type": "local",
    "command": "docker-mcp",
    "args": [],
    "packageName": "docker-mcp",
    "installType": "go",
    "tags": [
      "docker",
      "container",
      "management"
    ],
    "sourceUrl": "https://github.com/QuantGeekDev/docker-mcp"
  },
  {
    "id": "fetch_zcaceres",
    "name": "Fetch by Z Caceres",
    "description": "An MCP server to flexibly fetch JSON, text, and HTML data",
    "type": "local",
    "command": "npx",
    "args": [
      "fetch-mcp"
    ],
    "packageName": "fetch-mcp",
    "installType": "npm",
    "tags": [
      "fetch",
      "http",
      "data"
    ],
    "sourceUrl": "https://github.com/zcaceres/fetch-mcp"
  },
  {
    "id": "xcode",
    "name": "Xcode",
    "description": "Xcode integration for project management, file operations, and build automation",
    "type": "local",
    "command": "npx",
    "args": [
      "xcode-mcp-server"
    ],
    "packageName": "xcode-mcp-server",
    "installType": "npm",
    "tags": [
      "xcode",
      "ios",
      "macos"
    ],
    "sourceUrl": "https://github.com/r-huijts/xcode-mcp-server"
  },
  {
    "id": "openapi",
    "name": "OpenAPI",
    "description": "Connect any HTTP/REST API server using an Open API spec (v3)",
    "type": "local",
    "command": "openapi-mcp-server",
    "args": [],
    "packageName": "openapi-mcp-server",
    "installType": "go",
    "tags": [
      "openapi",
      "rest",
      "api"
    ],
    "sourceUrl": "https://github.com/snaggle-ai/openapi-mcp-server"
  },
  {
    "id": "mcpproxy",
    "name": "JetBrains MCP Proxy",
    "description": "Connect to JetBrains IDE",
    "type": "local",
    "command": "npx",
    "args": [
      "@jetbrains/mcpproxy"
    ],
    "packageName": "@jetbrains/mcpproxy",
    "installType": "npm",
    "tags": [
      "jetbrains",
      "ide",
      "development"
    ],
    "sourceUrl": "https://github.com/JetBrains/mcpProxy"
  },
  {
    "id": "text_editor",
    "name": "Text Editor",
    "description": "A line-oriented text file editor optimized for LLM tools with efficient partial file access to minimize token usage",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "mcp_text_editor"
    ],
    "packageName": "mcp-text-editor",
    "installType": "pip",
    "tags": [
      "editor",
      "text",
      "file"
    ],
    "sourceUrl": "https://github.com/tumf/mcp-text-editor"
  },
  {
    "id": "ios_simulator",
    "name": "iOS Simulator",
    "description": "An MCP server to control iOS Simulators",
    "type": "local",
    "command": "npx",
    "args": [
      "@joshuarileydev/simulator-mcp-server"
    ],
    "packageName": "@joshuarileydev/simulator-mcp-server",
    "installType": "npm",
    "tags": [
      "ios",
      "simulator",
      "testing"
    ],
    "sourceUrl": "https://github.com/JoshuaRileyDev/simulator-mcp-server"
  },
  {
    "id": "app_store_connect",
    "name": "App Store Connect",
    "description": "An MCP server to communicate with the App Store Connect API for iOS Developers",
    "type": "local",
    "command": "npx",
    "args": [
      "@joshuarileydev/app-store-connect-mcp-server"
    ],
    "packageName": "@joshuarileydev/app-store-connect-mcp-server",
    "installType": "npm",
    "tags": [
      "app-store",
      "ios",
      "api"
    ],
    "sourceUrl": "https://github.com/JoshuaRileyDev/app-store-connect-mcp-server"
  },
  {
    "id": "package_version",
    "name": "Package Version",
    "description": "An MCP Server to help LLMs suggest the latest stable package versions when writing code",
    "type": "local",
    "command": "npx",
    "args": [
      "@sammcj/mcp-package-version"
    ],
    "packageName": "@sammcj/mcp-package-version",
    "installType": "npm",
    "tags": [
      "packages",
      "versions",
      "development"
    ],
    "sourceUrl": "https://github.com/sammcj/mcp-package-version"
  },
  {
    "id": "postman",
    "name": "Postman",
    "description": "Interact with Postman API",
    "type": "remote",
    "command": "npx",
    "args": [
      "@delano/postman-mcp-server"
    ],
    "packageName": "@delano/postman-mcp-server",
    "installType": "npm",
    "tags": [
      "postman",
      "api",
      "testing"
    ],
    "sourceUrl": "https://github.com/delano/postman-mcp-server"
  },
  {
    "id": "pandoc",
    "name": "Pandoc",
    "description": "MCP server for seamless document format conversion using Pandoc, supporting Markdown, HTML, PDF, DOCX (.docx), csv and more",
    "type": "local",
    "command": "npx",
    "args": [
      "@vivekvells/mcp-pandoc"
    ],
    "packageName": "@vivekvells/mcp-pandoc",
    "installType": "npm",
    "tags": [
      "pandoc",
      "document",
      "conversion"
    ],
    "sourceUrl": "https://github.com/vivekVells/mcp-pandoc"
  },
  {
    "id": "website_downloader",
    "name": "Website Downloader",
    "description": "This MCP server provides a tool to download entire websites using wget. It preserves the website structure and converts links to work locally",
    "type": "local",
    "command": "npx",
    "args": [
      "@pskill9/website-downloader"
    ],
    "packageName": "@pskill9/website-downloader",
    "installType": "npm",
    "tags": [
      "website",
      "download",
      "wget"
    ],
    "sourceUrl": "https://github.com/pskill9/website-downloader"
  },
  {
    "id": "multiverse",
    "name": "Multiverse",
    "description": "A middleware server that enables multiple isolated instances of the same MCP servers to coexist independently with unique namespaces and configurations",
    "type": "local",
    "command": "npx",
    "args": [
      "@lamemind/mcp-server-multiverse"
    ],
    "packageName": "@lamemind/mcp-server-multiverse",
    "installType": "npm",
    "tags": [
      "middleware",
      "server",
      "isolation"
    ],
    "sourceUrl": "https://github.com/lamemind/mcp-server-multiverse"
  },
  {
    "id": "sql_analyzer",
    "name": "SQL Analyzer",
    "description": "MCP server that provides SQL analysis, linting, and dialect conversion using SQLGlot",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "mcp_server_sql_analyzer"
    ],
    "packageName": "mcp-server-sql-analyzer",
    "installType": "pip",
    "tags": [
      "sql",
      "analysis",
      "linting"
    ],
    "sourceUrl": "https://github.com/j4c0bs/mcp-server-sql-analyzer"
  },
  {
    "id": "excel",
    "name": "Excel",
    "description": "An Excel manipulation server providing workbook creation, data operations, formatting, and advanced features (charts, pivot tables, formulae)",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "excel_mcp_server"
    ],
    "packageName": "excel-mcp-server",
    "installType": "pip",
    "tags": [
      "excel",
      "spreadsheet",
      "office"
    ],
    "sourceUrl": "https://github.com/haris-musa/excel-mcp-server"
  },
  {
    "id": "xcodebuild",
    "name": "XcodeBuild",
    "description": "Build iOS Xcode workspace/project and feed back errors to llm",
    "type": "local",
    "command": "xcodebuild",
    "args": [],
    "packageName": "xcodebuild",
    "installType": "go",
    "tags": [
      "xcode",
      "ios",
      "build"
    ],
    "sourceUrl": "https://github.com/ShenghaiWang/xcodebuild"
  },
  {
    "id": "claude_debug",
    "name": "Claude Debugs For You",
    "description": "An MCP Server and VS Code Extension which enables (language agnostic) automatic debugging via breakpoints and expression evaluation",
    "type": "local",
    "command": "npx",
    "args": [
      "@jasonjmcghee/claude-debugs-for-you"
    ],
    "packageName": "@jasonjmcghee/claude-debugs-for-you",
    "installType": "npm",
    "tags": [
      "debug",
      "vscode",
      "extension"
    ],
    "sourceUrl": "https://github.com/jasonjmcghee/claude-debugs-for-you"
  },
  {
    "id": "serve_my_api",
    "name": "ServeMyAPI",
    "description": "A personal MCP (Model Context Protocol) server for securely storing and accessing API keys across projects using the macOS Keychain",
    "type": "local",
    "command": "npx",
    "args": [
      "@Jktfe/serveMyAPI"
    ],
    "packageName": "@Jktfe/serveMyAPI",
    "installType": "npm",
    "tags": [
      "api",
      "keys",
      "security"
    ],
    "sourceUrl": "https://github.com/Jktfe/serveMyAPI"
  },
  {
    "id": "jvm",
    "name": "JVM",
    "description": "An implementation project of a JVM-based MCP (Model Context Protocol) server",
    "type": "local",
    "command": "npx",
    "args": [
      "@xzq.xu/jvm-mcp-server"
    ],
    "packageName": "@xzq.xu/jvm-mcp-server",
    "installType": "npm",
    "tags": [
      "jvm",
      "java",
      "server"
    ],
    "sourceUrl": "https://github.com/xzq-xu/jvm-mcp-server"
  },
  {
    "id": "airflow",
    "name": "Apache Airflow",
    "description": "MCP server that connects to Apache Airflow using official client",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "mcp_server_apache_airflow"
    ],
    "packageName": "mcp-server-apache-airflow",
    "installType": "pip",
    "tags": [
      "airflow",
      "orchestration",
      "workflow"
    ],
    "sourceUrl": "https://github.com/yangkyeongmo/mcp-server-apache-airflow"
  },
  {
    "id": "chronulus",
    "name": "Chronulus",
    "description": "Predict anything with Chronulus AI forecasting and prediction agents",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "chronulus_mcp"
    ],
    "packageName": "chronulus-mcp",
    "installType": "pip",
    "tags": [
      "prediction",
      "forecasting",
      "ai"
    ],
    "sourceUrl": "https://github.com/ChronulusAI/chronulus-mcp"
  },
  {
    "id": "markdownify",
    "name": "Markdownify",
    "description": "An MCP server to convert almost any file or web content into Markdown",
    "type": "local",
    "command": "npx",
    "args": [
      "markdownify-mcp"
    ],
    "packageName": "markdownify-mcp",
    "installType": "npm",
    "tags": [
      "markdown",
      "conversion",
      "content"
    ],
    "sourceUrl": "https://github.com/zcaceres/markdownify-mcp"
  },
  {
    "id": "data_exploration",
    "name": "Data Exploration",
    "description": "Enables autonomous data exploration on .csv-based datasets, providing intelligent insights with minimal effort",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_server_data_exploration"
    ],
    "packageName": "mcp-server-data-exploration",
    "installType": "pip",
    "tags": [
      "data",
      "exploration",
      "csv"
    ],
    "sourceUrl": "https://github.com/reading-plus-ai/mcp-server-data-exploration"
  },
  {
    "id": "box",
    "name": "Box",
    "description": "Box integration for listing, reading and searching files",
    "type": "remote",
    "command": "npx",
    "args": [
      "box-mcp-server"
    ],
    "packageName": "box-mcp-server",
    "installType": "npm",
    "tags": [
      "box",
      "files",
      "cloud"
    ],
    "sourceUrl": "https://github.com/hmk/box-mcp-server"
  },
  {
    "id": "filesystem_go",
    "name": "Filesystem (Go)",
    "description": "Golang implementation for local file system access",
    "type": "local",
    "command": "mcp-filesystem-server",
    "args": [],
    "packageName": "mcp-filesystem-server",
    "installType": "go",
    "tags": [
      "filesystem",
      "files",
      "io"
    ],
    "sourceUrl": "https://github.com/mark3labs/mcp-filesystem-server"
  },
  {
    "id": "everything_search",
    "name": "Everything Search",
    "description": "Fast Windows file search using Everything SDK",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "mcp_everything_search"
    ],
    "packageName": "mcp-everything-search",
    "installType": "pip",
    "tags": [
      "search",
      "files",
      "windows"
    ],
    "sourceUrl": "https://github.com/mamertofabian/mcp-everything-search"
  },
  {
    "id": "llm_context",
    "name": "LLM Context",
    "description": "Share code context with LLMs via MCP or clipboard",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "llm_context"
    ],
    "packageName": "llm-context.py",
    "installType": "pip",
    "tags": [
      "context",
      "code",
      "llm"
    ],
    "sourceUrl": "https://github.com/cyberchitta/llm-context.py"
  },
  {
    "id": "nyt",
    "name": "New York Times",
    "description": "Search articles using the NYTimes API",
    "type": "remote",
    "command": "npx",
    "args": [
      "@angheljf/nyt"
    ],
    "packageName": "@angheljf/nyt",
    "installType": "npm",
    "tags": [
      "news",
      "articles",
      "nytimes"
    ],
    "sourceUrl": "https://github.com/angheljf/nyt"
  },
  {
    "id": "kagi",
    "name": "Kagi",
    "description": "Kagi search API integration",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-servers-kagi"
    ],
    "packageName": "mcp-servers-kagi",
    "installType": "npm",
    "tags": [
      "search",
      "web",
      "kagi"
    ],
    "sourceUrl": "https://github.com/ac3xx/mcp-servers-kagi"
  },
  {
    "id": "exa",
    "name": "Exa",
    "description": "A Model Context Protocol (MCP) server lets AI assistants like Claude use the Exa AI Search API for web searches",
    "type": "remote",
    "command": "npx",
    "args": [
      "exa-mcp-server"
    ],
    "packageName": "exa-mcp-server",
    "installType": "npm",
    "tags": [
      "search",
      "web",
      "exa"
    ],
    "sourceUrl": "https://github.com/exa-labs/exa-mcp-server"
  },
  {
    "id": "search1api",
    "name": "Search1API",
    "description": "Search via search1api (requires paid API key)",
    "type": "remote",
    "command": "npx",
    "args": [
      "search1api-mcp"
    ],
    "packageName": "search1api-mcp",
    "installType": "npm",
    "tags": [
      "search",
      "web",
      "api"
    ],
    "sourceUrl": "https://github.com/fatwang2/search1api-mcp"
  },
  {
    "id": "arxiv",
    "name": "ArXiv",
    "description": "Search ArXiv research papers",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "arxiv_mcp_server"
    ],
    "packageName": "arxiv-mcp-server",
    "installType": "pip",
    "tags": [
      "arxiv",
      "research",
      "papers"
    ],
    "sourceUrl": "https://github.com/blazickjp/arxiv-mcp-server"
  },
  {
    "id": "webresearch",
    "name": "Web Research",
    "description": "Search Google and do deep web research on any topic",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-webresearch"
    ],
    "packageName": "mcp-webresearch",
    "installType": "npm",
    "tags": [
      "research",
      "web",
      "google"
    ],
    "sourceUrl": "https://github.com/mzxrai/mcp-webresearch"
  },
  {
    "id": "simple_arxiv",
    "name": "Simple ArXiv",
    "description": "MCP for LLM to search and read papers from arXiv",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_simple_arxiv"
    ],
    "packageName": "mcp-simple-arxiv",
    "installType": "pip",
    "tags": [
      "arxiv",
      "papers",
      "research"
    ],
    "sourceUrl": "https://github.com/andybrandt/mcp-simple-arxiv"
  },
  {
    "id": "simple_pubmed",
    "name": "Simple PubMed",
    "description": "MCP to search and read medical / life sciences papers from PubMed",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_simple_pubmed"
    ],
    "packageName": "mcp-simple-pubmed",
    "installType": "pip",
    "tags": [
      "pubmed",
      "medical",
      "research"
    ],
    "sourceUrl": "https://github.com/andybrandt/mcp-simple-pubmed"
  },
  {
    "id": "apify_rag",
    "name": "Apify RAG Web Browser",
    "description": "An MCP server for Apify's open-source RAG Web Browser Actor to perform web searches, scrape URLs, and return content in Markdown",
    "type": "remote",
    "command": "npx",
    "args": [
      "@apify/mcp-server-rag-web-browser"
    ],
    "packageName": "@apify/mcp-server-rag-web-browser",
    "installType": "npm",
    "tags": [
      "rag",
      "web",
      "scraping"
    ],
    "sourceUrl": "https://github.com/apify/mcp-server-rag-web-browser"
  },
  {
    "id": "searxng",
    "name": "SearXNG",
    "description": "An MCP Server to connect to searXNG instances",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "mcp_searxng"
    ],
    "packageName": "mcp-searxng",
    "installType": "pip",
    "tags": [
      "search",
      "web",
      "privacy"
    ],
    "sourceUrl": "https://github.com/SecretiveShell/MCP-searxng"
  },
  {
    "id": "clojars",
    "name": "Clojars",
    "description": "Clojars MCP Server for up-to-date dependency information of Clojure libraries",
    "type": "remote",
    "command": "npx",
    "args": [
      "clojars-mcp-server"
    ],
    "packageName": "clojars-mcp-server",
    "installType": "npm",
    "tags": [
      "clojure",
      "libraries",
      "dependencies"
    ],
    "sourceUrl": "https://github.com/Bigsy/Clojars-MCP-Server"
  },
  {
    "id": "searxng_ts",
    "name": "SearXNG TypeScript",
    "description": "A Model Context Protocol Server for SearXNG",
    "type": "local",
    "command": "npx",
    "args": [
      "@ihor-sokoliuk/mcp-searxng"
    ],
    "packageName": "@ihor-sokoliuk/mcp-searxng",
    "installType": "npm",
    "tags": [
      "search",
      "web",
      "privacy"
    ],
    "sourceUrl": "https://github.com/ihor-sokoliuk/mcp-searxng"
  },
  {
    "id": "hn",
    "name": "Hacker News",
    "description": "An MCP server to search Hacker News, get top stories, and more",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_hn"
    ],
    "packageName": "mcp-hn",
    "installType": "pip",
    "tags": [
      "hacker-news",
      "news",
      "tech"
    ],
    "sourceUrl": "https://github.com/erithwik/mcp-hn"
  },
  {
    "id": "google_news",
    "name": "Google News",
    "description": "Google News integration with automatic topic categorization, multi-language support, and comprehensive search capabilities",
    "type": "remote",
    "command": "npx",
    "args": [
      "server-google-news"
    ],
    "packageName": "server-google-news",
    "installType": "npm",
    "tags": [
      "news",
      "google",
      "search"
    ],
    "sourceUrl": "https://github.com/ChanMeng666/server-google-news"
  },
  {
    "id": "trieve",
    "name": "Trieve",
    "description": "Crawl, embed, chunk, search, and retrieve information from datasets through Trieve",
    "type": "local",
    "command": "npx",
    "args": [
      "@devflowinc/trieve-mcp-server"
    ],
    "packageName": "@devflowinc/trieve-mcp-server",
    "installType": "npm",
    "tags": [
      "search",
      "retrieval",
      "embeddings"
    ],
    "sourceUrl": "https://github.com/devflowinc/trieve/tree/main/clients/mcp-server"
  },
  {
    "id": "duckduckgo_ts",
    "name": "DuckDuckGo TypeScript",
    "description": "This is a TypeScript-based MCP server that provides DuckDuckGo search functionality",
    "type": "local",
    "command": "npx",
    "args": [
      "duckduckgo-mpc-server"
    ],
    "packageName": "duckduckgo-mpc-server",
    "installType": "npm",
    "tags": [
      "search",
      "duckduckgo",
      "web"
    ],
    "sourceUrl": "https://github.com/zhsama/duckduckgo-mpc-server/"
  },
  {
    "id": "vectorize",
    "name": "Vectorize",
    "description": "Vectorize MCP server for advanced retrieval, Private Deep Research, Anything-to-Markdown file extraction and text chunking",
    "type": "remote",
    "command": "npx",
    "args": [
      "@vectorize-io/vectorize-mcp-server"
    ],
    "packageName": "@vectorize-io/vectorize-mcp-server",
    "installType": "npm",
    "tags": [
      "vector",
      "research",
      "markdown"
    ],
    "sourceUrl": "https://github.com/vectorize-io/vectorize-mcp-server/"
  },
  {
    "id": "wecombot",
    "name": "Wecombot",
    "description": "\ud83d\ude80 \u2601\ufe0f  - An MCP server application that sends various types of messages to the WeCom group robot.",
    "type": "remote",
    "command": "npx",
    "args": [
      "wecombot"
    ],
    "packageName": "wecombot",
    "installType": "npm",
    "tags": [
      "communication",
      "messaging"
    ],
    "sourceUrl": "https://github.com/gotoolkits/mcp-wecombot-server.git"
  },
  {
    "id": "nostr_mcp",
    "name": "Nostr Mcp",
    "description": "\ud83c\udf10 \u2601\ufe0f - A Nostr MCP server that allows to interact with Nostr, enabling posting notes, and more.",
    "type": "remote",
    "command": "npx",
    "args": [
      "nostr-mcp"
    ],
    "packageName": "nostr-mcp",
    "installType": "npm",
    "tags": [
      "communication"
    ],
    "sourceUrl": "https://github.com/AbdelStark/nostr-mcp"
  },
  {
    "id": "inbox_zero",
    "name": "Inbox Zero",
    "description": "\ud83d\udc0d \u2601\ufe0f - An MCP server for Inbox Zero. Adds functionality on top of Gmail like finding out which emails you need to reply to or need to follow up on.",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "inbox_zero"
    ],
    "packageName": "inbox-zero",
    "installType": "pip",
    "tags": [
      "communication",
      "ai"
    ],
    "sourceUrl": "https://github.com/elie222/inbox-zero/tree/main/apps/mcp-server"
  },
  {
    "id": "mac_messages_mcp",
    "name": "Mac_Messages_Mcp",
    "description": "An MCP server that securely interfaces with your iMessage database via the Model Context Protocol (MCP), allowing LLMs to query and analyze iMessage conversations.",
    "type": "local",
    "command": "npx",
    "args": [
      "mac_messages_mcp"
    ],
    "packageName": "mac_messages_mcp",
    "installType": "npm",
    "tags": [
      "communication",
      "database",
      "ai",
      "messaging"
    ],
    "sourceUrl": "https://github.com/carterlasalle/mac_messages_mcp"
  },
  {
    "id": "vrchat_mcp",
    "name": "Vrchat Mcp",
    "description": "\ud83d\udcc7 \ud83c\udfe0 This is an MCP server for interacting with the VRChat API. You can retrieve information about friends, worlds, avatars, and more in VRChat.",
    "type": "local",
    "command": "npx",
    "args": [
      "vrchat-mcp"
    ],
    "packageName": "vrchat-mcp",
    "installType": "npm",
    "tags": [
      "communication",
      "messaging"
    ],
    "sourceUrl": "https://github.com/sawa-zen/vrchat-mcp"
  },
  {
    "id": "inoyu_mcp_unomi_server",
    "name": "Inoyu Mcp Unomi Server",
    "description": "An MCP server to access and updates profiles on an Apache Unomi CDP server.",
    "type": "remote",
    "command": "npx",
    "args": [
      "inoyu-mcp-unomi-server"
    ],
    "packageName": "inoyu-mcp-unomi-server",
    "installType": "npm",
    "tags": [
      "customer",
      "files"
    ],
    "sourceUrl": "https://github.com/sergehuber/inoyu-mcp-unomi-server"
  },
  {
    "id": "opendatamcp",
    "name": "Opendatamcp",
    "description": "Connect any Open Data to any LLM with Model Context Protocol.",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "OpenDataMCP"
    ],
    "packageName": "OpenDataMCP",
    "installType": "pip",
    "tags": [
      "customer",
      "ai"
    ],
    "sourceUrl": "https://github.com/OpenDataMCP/OpenDataMCP"
  },
  {
    "id": "mcp_server_iaptic",
    "name": "Mcp Server Iaptic",
    "description": "Connect with [iaptic](https://www.iaptic.com) to ask about your Customer Purchases, Transaction data and App Revenue statistics.",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-server-iaptic"
    ],
    "packageName": "mcp-server-iaptic",
    "installType": "npm",
    "tags": [
      "customer",
      "web"
    ],
    "sourceUrl": "https://github.com/iaptic/mcp-server-iaptic"
  },
  {
    "id": "airtable_mcp",
    "name": "Airtable Mcp",
    "description": "Connect AI tools directly to Airtable. Query, create, update, and delete records using natural language.",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "airtable_mcp"
    ],
    "packageName": "airtable-mcp",
    "installType": "pip",
    "tags": [
      "databases",
      "database",
      "ai"
    ],
    "sourceUrl": "https://github.com/rashidazarang/airtable-mcp"
  },
  {
    "id": "server_postgres",
    "name": "Server Postgres",
    "description": "PostgreSQL database integration with schema inspection and query capabilities",
    "type": "local",
    "command": "npx",
    "args": [
      "server-postgres"
    ],
    "packageName": "server-postgres",
    "installType": "npm",
    "tags": [
      "databases",
      "database"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/postgres"
  },
  {
    "id": "server_sqlite",
    "name": "Server Sqlite",
    "description": "SQLite database operations with built-in analysis features",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "server_sqlite"
    ],
    "packageName": "server-sqlite",
    "installType": "pip",
    "tags": [
      "databases",
      "database"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/sqlite"
  },
  {
    "id": "omniparser_autogui_mcp",
    "name": "Omniparser Autogui Mcp",
    "description": "\ud83d\udc0d Automatic operation of on-screen GUI.",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "omniparser_autogui_mcp"
    ],
    "packageName": "omniparser-autogui-mcp",
    "installType": "pip",
    "tags": [
      "developer"
    ],
    "sourceUrl": "https://github.com/NON906/omniparser-autogui-mcp"
  },
  {
    "id": "mcp_kibela",
    "name": "Mcp Kibela",
    "description": "\ud83d\udcc7 \u2601\ufe0f Allows AI models to interact with [Kibela](https://kibe.la/)",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-kibela"
    ],
    "packageName": "mcp-kibela",
    "installType": "npm",
    "tags": [
      "developer",
      "web",
      "ai"
    ],
    "sourceUrl": "https://github.com/kj455/mcp-kibela"
  },
  {
    "id": "mcp_graphql",
    "name": "Mcp Graphql",
    "description": "Allows the AI to query GraphQL servers",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-graphql"
    ],
    "packageName": "mcp-graphql",
    "installType": "npm",
    "tags": [
      "developer",
      "ai"
    ],
    "sourceUrl": "https://github.com/blurrah/mcp-graphql"
  },
  {
    "id": "replicate_flux_mcp",
    "name": "Replicate Flux Mcp",
    "description": "Provides the ability to generate images via Replicate's API.",
    "type": "remote",
    "command": "npx",
    "args": [
      "replicate-flux-mcp"
    ],
    "packageName": "replicate-flux-mcp",
    "installType": "npm",
    "tags": [
      "developer"
    ],
    "sourceUrl": "https://github.com/awkoy/replicate-flux-mcp"
  },
  {
    "id": "server_google_drive",
    "name": "Server Google Drive",
    "description": "Google Drive integration for listing, reading, and searching files",
    "type": "remote",
    "command": "npx",
    "args": [
      "server-google-drive"
    ],
    "packageName": "server-google-drive",
    "installType": "npm",
    "tags": [
      "file",
      "search",
      "files"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/gdrive"
  },
  {
    "id": "quarkus_mcp_servers",
    "name": "Quarkus Mcp Servers",
    "description": "A filesystem allowing for browsing and editing files implemented in Java using Quarkus. Available as jar or native image.",
    "type": "local",
    "command": "java",
    "args": [
      "-jar",
      "quarkus-mcp-servers.jar"
    ],
    "packageName": "quarkus-mcp-servers",
    "installType": "java",
    "tags": [
      "file",
      "files",
      "ai"
    ],
    "sourceUrl": "https://github.com/quarkiverse/quarkus-mcp-servers/tree/main/filesystem"
  },
  {
    "id": "mcp_server_opendal",
    "name": "Mcp Server Opendal",
    "description": "Access any storage with Apache OpenDAL\u2122",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_server_opendal"
    ],
    "packageName": "mcp-server-opendal",
    "installType": "pip",
    "tags": [
      "file",
      "files"
    ],
    "sourceUrl": "https://github.com/Xuanwo/mcp-server-opendal"
  },
  {
    "id": "coincap_mcp",
    "name": "Coincap Mcp",
    "description": "Real-time cryptocurrency market data integration using CoinCap's public API",
    "type": "remote",
    "command": "npx",
    "args": [
      "coincap-mcp"
    ],
    "packageName": "coincap-mcp",
    "installType": "npm",
    "tags": [
      "finance"
    ],
    "sourceUrl": "https://github.com/QuantGeekDev/coincap-mcp"
  },
  {
    "id": "coinmarket_mcp_server",
    "name": "Coinmarket Mcp Server",
    "description": "Coinmarket API integration to fetch cryptocurrency listings and quotes",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "coinmarket_mcp_server"
    ],
    "packageName": "coinmarket-mcp-server",
    "installType": "pip",
    "tags": [
      "finance",
      "web"
    ],
    "sourceUrl": "https://github.com/anjor/coinmarket-mcp-server"
  },
  {
    "id": "alpha_vantage_mcp",
    "name": "Alpha Vantage Mcp",
    "description": "Alpha Vantage API integration to fetch both stock and crypto information",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "alpha_vantage_mcp"
    ],
    "packageName": "alpha-vantage-mcp",
    "installType": "pip",
    "tags": [
      "finance",
      "web"
    ],
    "sourceUrl": "https://github.com/berlinbra/alpha-vantage-mcp"
  },
  {
    "id": "tasty_agent",
    "name": "Tasty Agent",
    "description": "Tastyworks API integration to handle trading activities on Tastytrade",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "tasty_agent"
    ],
    "packageName": "tasty-agent",
    "installType": "pip",
    "tags": [
      "finance"
    ],
    "sourceUrl": "https://github.com/ferdousbhai/tasty-agent"
  },
  {
    "id": "investor_agent",
    "name": "Investor Agent",
    "description": "Yahoo Finance integration to fetch stock market data including options recommendations",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "investor_agent"
    ],
    "packageName": "investor-agent",
    "installType": "pip",
    "tags": [
      "finance",
      "web"
    ],
    "sourceUrl": "https://github.com/ferdousbhai/investor-agent"
  },
  {
    "id": "evm_mcp_server",
    "name": "Evm Mcp Server",
    "description": "Comprehensive blockchain services for 30+ EVM networks",
    "type": "remote",
    "command": "npx",
    "args": [
      "evm-mcp-server"
    ],
    "packageName": "evm-mcp-server",
    "installType": "npm",
    "tags": [
      "finance",
      "ai"
    ],
    "sourceUrl": "https://github.com/mcpdotdirect/evm-mcp-server"
  },
  {
    "id": "onchain_mcp",
    "name": "Onchain Mcp",
    "description": "Bankless Onchain API to interact with smart contracts, query transaction and token information",
    "type": "remote",
    "command": "npx",
    "args": [
      "onchain-mcp"
    ],
    "packageName": "onchain-mcp",
    "installType": "npm",
    "tags": [
      "finance",
      "ai"
    ],
    "sourceUrl": "https://github.com/Bankless/onchain-mcp/"
  },
  {
    "id": "cryptopanic_mcp_server",
    "name": "Cryptopanic Mcp Server",
    "description": "Providing latest cryptocurrency news to AI agents, powered by CryptoPanic.",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "cryptopanic_mcp_server"
    ],
    "packageName": "cryptopanic-mcp-server",
    "installType": "pip",
    "tags": [
      "finance",
      "ai"
    ],
    "sourceUrl": "https://github.com/kukapay/cryptopanic-mcp-server"
  },
  {
    "id": "whale_tracker_mcp",
    "name": "Whale Tracker Mcp",
    "description": "A mcp server for tracking cryptocurrency whale transactions.",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "whale_tracker_mcp"
    ],
    "packageName": "whale-tracker-mcp",
    "installType": "pip",
    "tags": [
      "finance"
    ],
    "sourceUrl": "https://github.com/kukapay/whale-tracker-mcp"
  },
  {
    "id": "crypto_feargreed_mcp",
    "name": "Crypto Feargreed Mcp",
    "description": "Providing real-time and historical Crypto Fear & Greed Index data.",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "crypto_feargreed_mcp"
    ],
    "packageName": "crypto-feargreed-mcp",
    "installType": "pip",
    "tags": [
      "finance"
    ],
    "sourceUrl": "https://github.com/kukapay/crypto-feargreed-mcp"
  },
  {
    "id": "dune_analytics_mcp",
    "name": "Dune Analytics Mcp",
    "description": "A mcp server that bridges Dune Analytics data to AI agents.",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "dune_analytics_mcp"
    ],
    "packageName": "dune-analytics-mcp",
    "installType": "pip",
    "tags": [
      "finance",
      "ai",
      "analytics"
    ],
    "sourceUrl": "https://github.com/kukapay/dune-analytics-mcp"
  },
  {
    "id": "fantasy_pl_mcp",
    "name": "Fantasy Pl Mcp",
    "description": "An MCP server for real-time Fantasy Premier League data and analysis tools.",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "fantasy_pl_mcp"
    ],
    "packageName": "fantasy-pl-mcp",
    "installType": "pip",
    "tags": [
      "gaming"
    ],
    "sourceUrl": "https://github.com/rishijatia/fantasy-pl-mcp/"
  },
  {
    "id": "server_memory",
    "name": "Server Memory",
    "description": "Knowledge graph-based persistent memory system for maintaining context",
    "type": "local",
    "command": "npx",
    "args": [
      "server-memory"
    ],
    "packageName": "server-memory",
    "installType": "npm",
    "tags": [
      "knowledge",
      "ai"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/memory"
  },
  {
    "id": "memorymesh",
    "name": "Memorymesh",
    "description": "Enhanced graph-based memory with a focus on AI role-play and story generation",
    "type": "local",
    "command": "npx",
    "args": [
      "MemoryMesh"
    ],
    "packageName": "MemoryMesh",
    "installType": "npm",
    "tags": [
      "knowledge",
      "ai"
    ],
    "sourceUrl": "https://github.com/CheMiguel23/MemoryMesh"
  },
  {
    "id": "cognee",
    "name": "Cognee",
    "description": "Memory manager for AI apps and Agents using various graph and vector stores",
    "type": "local",
    "command": "npx",
    "args": [
      "cognee"
    ],
    "packageName": "cognee",
    "installType": "npm",
    "tags": [
      "knowledge",
      "ai"
    ],
    "sourceUrl": "https://github.com/topoteretes/cognee/tree/dev/cognee-mcp"
  },
  {
    "id": "mcp_ragdocs",
    "name": "Mcp Ragdocs",
    "description": "An MCP server implementation that provides tools for retrieving and processing documentation through vector search",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "mcp_ragdocs"
    ],
    "packageName": "mcp-ragdocs",
    "installType": "pip",
    "tags": [
      "knowledge",
      "search"
    ],
    "sourceUrl": "https://github.com/hannesrudolph/mcp-ragdocs"
  },
  {
    "id": "mcp_zotero",
    "name": "Mcp Zotero",
    "description": "A connector for LLMs to work with collections and sources on your Zotero Cloud",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-zotero"
    ],
    "packageName": "mcp-zotero",
    "installType": "npm",
    "tags": [
      "knowledge",
      "ai",
      "cloud"
    ],
    "sourceUrl": "https://github.com/kaliaboi/mcp-zotero"
  },
  {
    "id": "mcp_summarizer",
    "name": "Mcp Summarizer",
    "description": "AI Summarization MCP Server, Support for multiple content types",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-summarizer"
    ],
    "packageName": "mcp-summarizer",
    "installType": "npm",
    "tags": [
      "knowledge",
      "ai"
    ],
    "sourceUrl": "https://github.com/0xshellming/mcp-summarizer"
  },
  {
    "id": "graphlit_mcp_server",
    "name": "Graphlit Mcp Server",
    "description": "Ingest anything from Slack, Discord, websites, Google Drive, Linear or GitHub into a Graphlit project",
    "type": "remote",
    "command": "npx",
    "args": [
      "graphlit-mcp-server"
    ],
    "packageName": "graphlit-mcp-server",
    "installType": "npm",
    "tags": [
      "knowledge",
      "github",
      "search",
      "web",
      "messaging"
    ],
    "sourceUrl": "https://github.com/graphlit/graphlit-mcp-server"
  },
  {
    "id": "server_google_maps",
    "name": "Server Google Maps",
    "description": "Google Maps integration for location services, routing, and place details",
    "type": "remote",
    "command": "npx",
    "args": [
      "server-google-maps"
    ],
    "packageName": "server-google-maps",
    "installType": "npm",
    "tags": [
      "location",
      "search",
      "ai"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/google-maps"
  },
  {
    "id": "mcp_timeserver",
    "name": "Mcp Timeserver",
    "description": "Access the time in any timezone and get the current local time",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "MCP_timeserver"
    ],
    "packageName": "MCP-timeserver",
    "installType": "pip",
    "tags": [
      "location"
    ],
    "sourceUrl": "https://github.com/SecretiveShell/MCP-timeserver"
  },
  {
    "id": "mcp_geo",
    "name": "Mcp Geo",
    "description": "Geocoding MCP server for nominatim, ArcGIS, Bing",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "MCP_Geo"
    ],
    "packageName": "MCP-Geo",
    "installType": "pip",
    "tags": [
      "location"
    ],
    "sourceUrl": "https://github.com/webcoderz/MCP-Geo"
  },
  {
    "id": "mcp_server_ipinfo",
    "name": "Mcp Server Ipinfo",
    "description": "IP address geolocation and network information using IPInfo API",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_server_ipinfo"
    ],
    "packageName": "mcp-server-ipinfo",
    "installType": "pip",
    "tags": [
      "location"
    ],
    "sourceUrl": "https://github.com/briandconnelly/mcp-server-ipinfo"
  },
  {
    "id": "qgis_mcp",
    "name": "Qgis_Mcp",
    "description": "connects QGIS Desktop to Claude AI through the MCP",
    "type": "local",
    "command": "npx",
    "args": [
      "qgis_mcp"
    ],
    "packageName": "qgis_mcp",
    "installType": "npm",
    "tags": [
      "location",
      "ai"
    ],
    "sourceUrl": "https://github.com/jjsantos01/qgis_mcp"
  },
  {
    "id": "nearby_search_mcp",
    "name": "Nearby Search Mcp",
    "description": "An MCP server for nearby place searches with IP-based location detection.",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "nearby_search_mcp"
    ],
    "packageName": "nearby-search-mcp",
    "installType": "pip",
    "tags": [
      "location",
      "search"
    ],
    "sourceUrl": "https://github.com/kukapay/nearby-search-mcp"
  },
  {
    "id": "osp_marketing_tools",
    "name": "Osp_Marketing_Tools",
    "description": "A suite of marketing tools from Open Strategy Partners including writing style, editing codes, and product marketing value map creation.",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "osp_marketing_tools"
    ],
    "packageName": "osp_marketing_tools",
    "installType": "pip",
    "tags": [
      "marketing"
    ],
    "sourceUrl": "https://github.com/open-strategy-partners/osp_marketing_tools"
  },
  {
    "id": "server_sentry",
    "name": "Server Sentry",
    "description": "Sentry.io integration for error tracking and performance monitoring",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "server_sentry"
    ],
    "packageName": "server-sentry",
    "installType": "pip",
    "tags": [
      "monitoring"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/sentry"
  },
  {
    "id": "server_raygun",
    "name": "Server Raygun",
    "description": "Raygun API V3 integration for crash reporting and real user monitoring",
    "type": "remote",
    "command": "npx",
    "args": [
      "server-raygun"
    ],
    "packageName": "server-raygun",
    "installType": "npm",
    "tags": [
      "monitoring"
    ],
    "sourceUrl": "https://github.com/MindscapeHQ/mcp-server-raygun"
  },
  {
    "id": "metoro_mcp_server",
    "name": "Metoro Mcp Server",
    "description": "Query and interact with kubernetes environments monitored by Metoro",
    "type": "remote",
    "command": "metoro-mcp-server",
    "args": [],
    "packageName": "metoro-mcp-server",
    "installType": "go",
    "tags": [
      "monitoring"
    ],
    "sourceUrl": "https://github.com/metoro-io/metoro-mcp-server"
  },
  {
    "id": "mcp_grafana",
    "name": "Mcp Grafana",
    "description": "Search dashboards, investigate incidents and query datasources in your Grafana instance",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_grafana"
    ],
    "packageName": "mcp-grafana",
    "installType": "pip",
    "tags": [
      "monitoring",
      "search"
    ],
    "sourceUrl": "https://github.com/grafana/mcp-grafana"
  },
  {
    "id": "server_brave_search",
    "name": "Server Brave Search",
    "description": "Web search capabilities using Brave's Search API",
    "type": "remote",
    "command": "npx",
    "args": [
      "server-brave-search"
    ],
    "packageName": "server-brave-search",
    "installType": "npm",
    "tags": [
      "search",
      "web"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/brave-search"
  },
  {
    "id": "server_fetch",
    "name": "Server Fetch",
    "description": "Efficient web content fetching and processing for AI consumption",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "server_fetch"
    ],
    "packageName": "server-fetch",
    "installType": "pip",
    "tags": [
      "search",
      "web",
      "ai"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/fetch"
  },
  {
    "id": "mcp_server_tavily",
    "name": "Mcp Server Tavily",
    "description": "MCP Server",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_server_tavily"
    ],
    "packageName": "mcp-server-tavily",
    "installType": "pip",
    "tags": [
      "search"
    ],
    "sourceUrl": "https://github.com/Tomatio13/mcp-server-tavily"
  },
  {
    "id": "mcp_tavily",
    "name": "Mcp Tavily",
    "description": "MCP Server",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-tavily"
    ],
    "packageName": "mcp-tavily",
    "installType": "npm",
    "tags": [
      "search"
    ],
    "sourceUrl": "https://github.com/kshern/mcp-tavily.git"
  },
  {
    "id": "mcp_dnstwist",
    "name": "Mcp Dnstwist",
    "description": "MCP server for dnstwist, a powerful DNS fuzzing tool",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-dnstwist"
    ],
    "packageName": "mcp-dnstwist",
    "installType": "npm",
    "tags": [
      "security"
    ],
    "sourceUrl": "https://github.com/BurtTheCoder/mcp-dnstwist"
  },
  {
    "id": "mcp_maigret",
    "name": "Mcp Maigret",
    "description": "MCP server for maigret, a powerful OSINT tool that collects user account information",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-maigret"
    ],
    "packageName": "mcp-maigret",
    "installType": "npm",
    "tags": [
      "security",
      "ai"
    ],
    "sourceUrl": "https://github.com/BurtTheCoder/mcp-maigret"
  },
  {
    "id": "mcp_shodan",
    "name": "Mcp Shodan",
    "description": "MCP server for querying the Shodan API and Shodan CVEDB",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-shodan"
    ],
    "packageName": "mcp-shodan",
    "installType": "npm",
    "tags": [
      "security"
    ],
    "sourceUrl": "https://github.com/BurtTheCoder/mcp-shodan"
  },
  {
    "id": "mcp_virustotal",
    "name": "Mcp Virustotal",
    "description": "MCP server for querying the VirusTotal API",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-virustotal"
    ],
    "packageName": "mcp-virustotal",
    "installType": "npm",
    "tags": [
      "security"
    ],
    "sourceUrl": "https://github.com/BurtTheCoder/mcp-virustotal"
  },
  {
    "id": "mcp_security",
    "name": "Mcp_Security",
    "description": "MCP server for querying the ORKL API",
    "type": "remote",
    "command": "npx",
    "args": [
      "MCP_Security"
    ],
    "packageName": "MCP_Security",
    "installType": "npm",
    "tags": [
      "security"
    ],
    "sourceUrl": "https://github.com/fr0gger/MCP_Security"
  },
  {
    "id": "mcp_security_audit",
    "name": "Mcp Security Audit",
    "description": "MCP Server",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-security-audit"
    ],
    "packageName": "mcp-security-audit",
    "installType": "npm",
    "tags": [
      "security"
    ],
    "sourceUrl": "https://github.com/qianniuspace/mcp-security-audit"
  },
  {
    "id": "mcp_server_airbnb",
    "name": "Mcp Server Airbnb",
    "description": "Provides tools to search Airbnb and get listing details",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-server-airbnb"
    ],
    "packageName": "mcp-server-airbnb",
    "installType": "npm",
    "tags": [
      "travel",
      "search",
      "ai"
    ],
    "sourceUrl": "https://github.com/openbnb-org/mcp-server-airbnb"
  },
  {
    "id": "ns_mcp_server",
    "name": "Ns Mcp Server",
    "description": "Access Dutch Railways (NS) travel information, schedules, and real-time updates",
    "type": "remote",
    "command": "npx",
    "args": [
      "ns-mcp-server"
    ],
    "packageName": "ns-mcp-server",
    "installType": "npm",
    "tags": [
      "travel",
      "ai"
    ],
    "sourceUrl": "https://github.com/r-huijts/ns-mcp-server"
  },
  {
    "id": "server_github",
    "name": "Server Github",
    "description": "GitHub API integration for repository management, PRs, issues, and more",
    "type": "remote",
    "command": "npx",
    "args": [
      "server-github"
    ],
    "packageName": "server-github",
    "installType": "npm",
    "tags": [
      "version",
      "github"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/github"
  },
  {
    "id": "server_gitlab",
    "name": "Server Gitlab",
    "description": "GitLab platform integration for project management and CI/CD operations",
    "type": "remote",
    "command": "npx",
    "args": [
      "server-gitlab"
    ],
    "packageName": "server-gitlab",
    "installType": "npm",
    "tags": [
      "version",
      "github"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/gitlab"
  },
  {
    "id": "server_git",
    "name": "Server Git",
    "description": "Direct Git repository operations including reading, searching, and analyzing local repositories",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "server_git"
    ],
    "packageName": "server-git",
    "installType": "pip",
    "tags": [
      "version",
      "github",
      "search"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/git"
  },
  {
    "id": "mcp_git_ingest",
    "name": "Mcp Git Ingest",
    "description": "Read and analyze GitHub repositories with your LLM",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "mcp_git_ingest"
    ],
    "packageName": "mcp-git-ingest",
    "installType": "pip",
    "tags": [
      "version",
      "github",
      "ai"
    ],
    "sourceUrl": "https://github.com/adhikasp/mcp-git-ingest"
  },
  {
    "id": "actors_mcp_server",
    "name": "Actors Mcp Server",
    "description": "Use 3,000+ pre-built cloud tools, known as Actors",
    "type": "remote",
    "command": "npx",
    "args": [
      "actors-mcp-server"
    ],
    "packageName": "actors-mcp-server",
    "installType": "npm",
    "tags": [
      "other",
      "cloud"
    ],
    "sourceUrl": "https://github.com/apify/actors-mcp-server"
  },
  {
    "id": "contentful_mcp",
    "name": "Contentful Mcp",
    "description": "Update, create, delete content, content-models and assets in your Contentful Space",
    "type": "local",
    "command": "npx",
    "args": [
      "contentful-mcp"
    ],
    "packageName": "contentful-mcp",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/ivo-toby/contentful-mcp"
  },
  {
    "id": "mcp_openai",
    "name": "Mcp Openai",
    "description": "Chat with OpenAI's smartest models",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-openai"
    ],
    "packageName": "mcp-openai",
    "installType": "npm",
    "tags": [
      "other",
      "ai",
      "messaging"
    ],
    "sourceUrl": "https://github.com/mzxrai/mcp-openai"
  },
  {
    "id": "godoc_mcp",
    "name": "Godoc Mcp",
    "description": "Token-efficient Go documentation server",
    "type": "local",
    "command": "godoc-mcp",
    "args": [],
    "packageName": "godoc-mcp",
    "installType": "go",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/mrjoshuak/godoc-mcp"
  },
  {
    "id": "mcp_server_openai",
    "name": "Mcp Server Openai",
    "description": "Query OpenAI models directly from Claude using MCP protocol",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_server_openai"
    ],
    "packageName": "mcp-server-openai",
    "installType": "pip",
    "tags": [
      "other",
      "ai"
    ],
    "sourceUrl": "https://github.com/pierrebrunelle/mcp-server-openai"
  },
  {
    "id": "server_everything",
    "name": "Server Everything",
    "description": "MCP server that exercises all the features of the MCP protocol",
    "type": "local",
    "command": "npx",
    "args": [
      "server-everything"
    ],
    "packageName": "server-everything",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/everything"
  },
  {
    "id": "phabricator_mcp_server",
    "name": "Phabricator Mcp Server",
    "description": "Interacting with Phabricator API",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "phabricator_mcp_server"
    ],
    "packageName": "phabricator-mcp-server",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/baba786/phabricator-mcp-server"
  },
  {
    "id": "mcp_obsidian",
    "name": "Mcp Obsidian",
    "description": "Interacting with Obsidian via REST API",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_obsidian"
    ],
    "packageName": "mcp-obsidian",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/MarkusPfundstein/mcp-obsidian"
  },
  {
    "id": "mcp_obsidian_cb169282",
    "name": "Mcp Obsidian",
    "description": "This is a connector to allow Claude Desktop (or any MCP client) to read and search any directory containing Markdown notes",
    "type": "local",
    "command": "npx",
    "args": [
      "mcp-obsidian"
    ],
    "packageName": "mcp-obsidian",
    "installType": "npm",
    "tags": [
      "other",
      "search",
      "ai"
    ],
    "sourceUrl": "https://github.com/calclavia/mcp-obsidian"
  },
  {
    "id": "mcp_youtube_713dc36f",
    "name": "Mcp Youtube",
    "description": "Fetch YouTube subtitles",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-youtube"
    ],
    "packageName": "mcp-youtube",
    "installType": "npm",
    "tags": [
      "other",
      "web"
    ],
    "sourceUrl": "https://github.com/anaisbetts/mcp-youtube"
  },
  {
    "id": "tiktok_mcp",
    "name": "Tiktok Mcp",
    "description": "Interact with TikTok videos",
    "type": "remote",
    "command": "npx",
    "args": [
      "tiktok-mcp"
    ],
    "packageName": "tiktok-mcp",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/Seym0n/tiktok-mcp"
  },
  {
    "id": "notion_mcp",
    "name": "Notion_Mcp",
    "description": "Integrates with Notion's API to manage personal todo lists",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "notion_mcp"
    ],
    "packageName": "notion_mcp",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/danhilse/notion_mcp"
  },
  {
    "id": "wcgw",
    "name": "Wcgw",
    "description": "Autonomous shell execution, computer control and coding agent (Mac)",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "wcgw"
    ],
    "packageName": "wcgw",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/rusiaaman/wcgw/blob/main/src/wcgw/client/mcp_server/Readme.md"
  },
  {
    "id": "ancestry_mcp",
    "name": "Ancestry Mcp",
    "description": "Allows the AI to read .ged files and genetic data",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "ancestry_mcp"
    ],
    "packageName": "ancestry-mcp",
    "installType": "pip",
    "tags": [
      "other",
      "files",
      "ai"
    ],
    "sourceUrl": "https://github.com/reeeeemo/ancestry-mcp"
  },
  {
    "id": "apple_notes_mcp",
    "name": "Apple Notes Mcp",
    "description": "Allows the AI to read from your local Apple Notes database (macOS only)",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "apple_notes_mcp"
    ],
    "packageName": "apple-notes-mcp",
    "installType": "pip",
    "tags": [
      "other",
      "database",
      "ai"
    ],
    "sourceUrl": "https://github.com/sirmews/apple-notes-mcp"
  },
  {
    "id": "mcp_notion_server",
    "name": "Mcp Notion Server",
    "description": "Interacting with Notion API",
    "type": "local",
    "command": "npx",
    "args": [
      "mcp-notion-server"
    ],
    "packageName": "mcp-notion-server",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/suekou/mcp-notion-server"
  },
  {
    "id": "unichat_mcp_server",
    "name": "Unichat Mcp Server",
    "description": "Send requests to OpenAI, MistralAI, Anthropic, xAI, Google AI or DeepSeek using MCP protocol",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "unichat_mcp_server"
    ],
    "packageName": "unichat-mcp-server",
    "installType": "pip",
    "tags": [
      "other",
      "search",
      "ai",
      "messaging"
    ],
    "sourceUrl": "https://github.com/amidabuddha/unichat-mcp-server"
  },
  {
    "id": "mcp_miro",
    "name": "Mcp Miro",
    "description": "Access MIRO whiteboards, bulk create and read items",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-miro"
    ],
    "packageName": "mcp-miro",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/evalstate/mcp-miro"
  },
  {
    "id": "jira_mcp_server",
    "name": "Jira Mcp Server",
    "description": "Get Confluence data via CQL and read pages",
    "type": "remote",
    "command": "npx",
    "args": [
      "jira-mcp-server"
    ],
    "packageName": "jira-mcp-server",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/KS-GEN-AI/jira-mcp-server"
  },
  {
    "id": "confluence_mcp_server",
    "name": "Confluence Mcp Server",
    "description": "Read jira data via JQL and api and execute requests to create and edit tickets",
    "type": "remote",
    "command": "npx",
    "args": [
      "confluence-mcp-server"
    ],
    "packageName": "confluence-mcp-server",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/KS-GEN-AI/confluence-mcp-server"
  },
  {
    "id": "mcp_atlassian",
    "name": "Mcp Atlassian",
    "description": "MCP server for Atlassian products (Confluence and Jira)",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_atlassian"
    ],
    "packageName": "mcp-atlassian",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/sooperset/mcp-atlassian"
  },
  {
    "id": "any_chat_completions_mcp",
    "name": "Any Chat Completions Mcp",
    "description": "Chat with any other OpenAI SDK Compatible Chat Completions API",
    "type": "local",
    "command": "npx",
    "args": [
      "any-chat-completions-mcp"
    ],
    "packageName": "any-chat-completions-mcp",
    "installType": "npm",
    "tags": [
      "other",
      "ai",
      "messaging"
    ],
    "sourceUrl": "https://github.com/pyroprompts/any-chat-completions-mcp"
  },
  {
    "id": "mcp_installer",
    "name": "Mcp Installer",
    "description": "An MCP server that installs other MCP servers for you",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "mcp_installer"
    ],
    "packageName": "mcp-installer",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/anaisbetts/mcp-installer"
  },
  {
    "id": "mcp_server_perplexity",
    "name": "Mcp Server Perplexity",
    "description": "Interacting with Perplexity API",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_server_perplexity"
    ],
    "packageName": "mcp-server-perplexity",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/tanigami/mcp-server-perplexity"
  },
  {
    "id": "wikimedia_enterprise_model_context_protocol",
    "name": "Wikimedia Enterprise Model Context Protocol",
    "description": "Wikipedia Article lookup API",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "wikimedia_enterprise_model_context_protocol"
    ],
    "packageName": "wikimedia-enterprise-model-context-protocol",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://gitlab.wikimedia.org/repos/future-audiences/wikimedia-enterprise-model-context-protocol"
  },
  {
    "id": "mcp_simple_timeserver",
    "name": "Mcp Simple Timeserver",
    "description": "An MCP server that allows checking local time on the client machine or current UTC time from an NTP server",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_simple_timeserver"
    ],
    "packageName": "mcp-simple-timeserver",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/andybrandt/mcp-simple-timeserver"
  },
  {
    "id": "mcp_simple_openai_assistant",
    "name": "Mcp Simple Openai Assistant",
    "description": "\ud83d\udc0d \u2601\ufe0f MCP to talk to OpenAI assistants",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_simple_openai_assistant"
    ],
    "packageName": "mcp-simple-openai-assistant",
    "installType": "pip",
    "tags": [
      "other",
      "ai"
    ],
    "sourceUrl": "https://github.com/andybrandt/mcp-simple-openai-assistant"
  },
  {
    "id": "mcp_hfspace",
    "name": "Mcp Hfspace",
    "description": "Use HuggingFace Spaces directly from Claude",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-hfspace"
    ],
    "packageName": "mcp-hfspace",
    "installType": "npm",
    "tags": [
      "other",
      "ai"
    ],
    "sourceUrl": "https://github.com/evalstate/mcp-hfspace"
  },
  {
    "id": "mcp_manager",
    "name": "Mcp Manager",
    "description": "Simple Web UI to install and manage MCP servers for Claude Desktop App",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-manager"
    ],
    "packageName": "mcp-manager",
    "installType": "npm",
    "tags": [
      "other",
      "web",
      "ai"
    ],
    "sourceUrl": "https://github.com/zueai/mcp-manager"
  },
  {
    "id": "mcp_cli",
    "name": "Mcp Cli",
    "description": "CLI tool for testing MCP servers",
    "type": "local",
    "command": "npx",
    "args": [
      "mcp-cli"
    ],
    "packageName": "mcp-cli",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/wong2/mcp-cli"
  },
  {
    "id": "mcp_vegalite_server",
    "name": "Mcp Vegalite Server",
    "description": "Generate visualizations from fetched data using the VegaLite format and renderer",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "mcp_vegalite_server"
    ],
    "packageName": "mcp-vegalite-server",
    "installType": "pip",
    "tags": [
      "other",
      "web"
    ],
    "sourceUrl": "https://github.com/isaacwasserman/mcp-vegalite-server"
  },
  {
    "id": "homeassistant_mcp",
    "name": "Homeassistant Mcp",
    "description": "Access Home Assistant data and control devices",
    "type": "local",
    "command": "npx",
    "args": [
      "homeassistant-mcp"
    ],
    "packageName": "homeassistant-mcp",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/tevonsb/homeassistant-mcp"
  },
  {
    "id": "mcp_server_home_assistant",
    "name": "Mcp Server Home Assistant",
    "description": "Expose all Home Assistant voice intents through a Model Context Protocol Server",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "mcp_server_home_assistant"
    ],
    "packageName": "mcp-server-home-assistant",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/allenporter/mcp-server-home-assistant"
  },
  {
    "id": "all_in_one_model_context_protocol",
    "name": "All In One Model Context Protocol",
    "description": "Some useful tools for developer",
    "type": "local",
    "command": "all-in-one-model-context-protocol",
    "args": [],
    "packageName": "all-in-one-model-context-protocol",
    "installType": "go",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/nguyenvanduocit/all-in-one-model-context-protocol"
  },
  {
    "id": "mac_apps_launcher_mcp_server",
    "name": "Mac Apps Launcher Mcp Server",
    "description": "An MCP server to list and launch applications on MacOS",
    "type": "local",
    "command": "npx",
    "args": [
      "mac-apps-launcher-mcp-server"
    ],
    "packageName": "mac-apps-launcher-mcp-server",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/JoshuaRileyDev/mac-apps-launcher"
  },
  {
    "id": "mcp_datetime",
    "name": "Mcp Datetime",
    "description": "MCP server providing date and time functions in various formats",
    "type": "local",
    "command": "npx",
    "args": [
      "mcp-datetime"
    ],
    "packageName": "mcp-datetime",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/ZeparHyfar/mcp-datetime"
  },
  {
    "id": "mcp_wolfram_alpha",
    "name": "Mcp Wolfram Alpha",
    "description": "An MCP server for querying wolfram alpha API",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "MCP_wolfram_alpha"
    ],
    "packageName": "MCP-wolfram-alpha",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/SecretiveShell/MCP-wolfram-alpha"
  },
  {
    "id": "mcp_server_amazon_bedrock",
    "name": "Mcp Server Amazon Bedrock",
    "description": "Use Amazon Nova Canvas model for image generation",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-server-amazon-bedrock"
    ],
    "packageName": "mcp-server-amazon-bedrock",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/zxkane/mcp-server-amazon-bedrock"
  },
  {
    "id": "piapi_mcp_server",
    "name": "Piapi Mcp Server",
    "description": "MCP Server",
    "type": "remote",
    "command": "npx",
    "args": [
      "piapi-mcp-server"
    ],
    "packageName": "piapi-mcp-server",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/apinetwork/piapi-mcp-server"
  },
  {
    "id": "difyworkflow",
    "name": "Difyworkflow",
    "description": "\ud83c\udfce\ufe0f \u2601\ufe0f Tools to the query and execute of Dify workflows",
    "type": "remote",
    "command": "DifyWorkflow",
    "args": [],
    "packageName": "DifyWorkflow",
    "installType": "go",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/gotoolkits/mcp-difyworkflow-server"
  },
  {
    "id": "hn_server",
    "name": "Hn Server",
    "description": "\ud83d\udcc7 \u2601\ufe0f Parses the HTML content from news.ycombinator.com (Hacker News)",
    "type": "remote",
    "command": "npx",
    "args": [
      "hn-server"
    ],
    "packageName": "hn-server",
    "installType": "npm",
    "tags": [
      "other",
      "ai"
    ],
    "sourceUrl": "https://github.com/pskill9/hn-server"
  },
  {
    "id": "screenpipe",
    "name": "Screenpipe",
    "description": "\ud83c\udf96\ufe0f \ud83e\udd80 \ud83c\udfe0 \ud83c\udf4e Local-first system capturing screen/audio with timestamped indexing",
    "type": "local",
    "command": "screenpipe",
    "args": [],
    "packageName": "screenpipe",
    "installType": "cargo",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/mediar-ai/screenpipe"
  },
  {
    "id": "bear_mcp_server",
    "name": "Bear Mcp Server",
    "description": "Allows the AI to read from your Bear Notes (macOS only)",
    "type": "local",
    "command": "npx",
    "args": [
      "bear-mcp-server"
    ],
    "packageName": "bear-mcp-server",
    "installType": "npm",
    "tags": [
      "other",
      "ai"
    ],
    "sourceUrl": "https://github.com/akseyh/bear-mcp-server"
  },
  {
    "id": "mcp_server_jfx",
    "name": "Mcp Server Jfx",
    "description": "Draw on JavaFX canvas",
    "type": "local",
    "command": "java",
    "args": [
      "-jar",
      "mcp-server-jfx.jar"
    ],
    "packageName": "mcp-server-jfx",
    "installType": "java",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/quarkiverse/quarkus-mcp-servers/tree/main/jfx"
  },
  {
    "id": "attio_mcp_server",
    "name": "Attio Mcp Server",
    "description": "\ud83d\udcc7 \u2601\ufe0f Allows AI clients to manage records and notes in Attio CRM",
    "type": "remote",
    "command": "npx",
    "args": [
      "attio-mcp-server"
    ],
    "packageName": "attio-mcp-server",
    "installType": "npm",
    "tags": [
      "other",
      "ai"
    ],
    "sourceUrl": "https://github.com/hmk/attio-mcp-server"
  },
  {
    "id": "mcp_server_asana",
    "name": "Mcp Server Asana",
    "description": "\ud83d\udcc7 \u2601\ufe0f This Model Context Protocol server implementation of Asana",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-server-asana"
    ],
    "packageName": "mcp-server-asana",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/roychri/mcp-server-asana"
  },
  {
    "id": "ws_mcp",
    "name": "Ws Mcp",
    "description": "Wrap MCP servers with a WebSocket (for use with [kitbitz](https://github.com/nick1udwig/kibitz))",
    "type": "local",
    "command": "npx",
    "args": [
      "ws-mcp"
    ],
    "packageName": "ws-mcp",
    "installType": "npm",
    "tags": [
      "other",
      "github",
      "web"
    ],
    "sourceUrl": "https://github.com/nick1udwig/ws-mcp"
  },
  {
    "id": "bitcoin_mcp",
    "name": "Bitcoin Mcp",
    "description": "\u20bf A Model Context Protocol (MCP) server that enables AI models to interact with Bitcoin",
    "type": "local",
    "command": "npx",
    "args": [
      "bitcoin-mcp"
    ],
    "packageName": "bitcoin-mcp",
    "installType": "npm",
    "tags": [
      "other",
      "ai",
      "finance"
    ],
    "sourceUrl": "https://github.com/AbdelStark/bitcoin-mcp"
  },
  {
    "id": "strava_mcp_server",
    "name": "Strava Mcp Server",
    "description": "An MCP server for Strava, an app for tracking physical exercise",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "strava_mcp_server"
    ],
    "packageName": "strava-mcp-server",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/tomekkorbak/strava-mcp-server"
  },
  {
    "id": "oura_mcp_server",
    "name": "Oura Mcp Server",
    "description": "An MCP server for Oura, an app for tracking sleep",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "oura_mcp_server"
    ],
    "packageName": "oura-mcp-server",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/tomekkorbak/oura-mcp-server"
  },
  {
    "id": "rember_mcp",
    "name": "Rember Mcp",
    "description": "Create spaced repetition flashcards in [Rember](https://rember.com)",
    "type": "local",
    "command": "npx",
    "args": [
      "rember-mcp"
    ],
    "packageName": "rember-mcp",
    "installType": "npm",
    "tags": [
      "other",
      "web"
    ],
    "sourceUrl": "https://github.com/rember/rember-mcp"
  },
  {
    "id": "raindrop_io_mcp_server",
    "name": "Raindrop Io Mcp Server",
    "description": "An integration that allows LLMs to interact with Raindrop.io bookmarks",
    "type": "remote",
    "command": "npx",
    "args": [
      "raindrop-io-mcp-server"
    ],
    "packageName": "raindrop-io-mcp-server",
    "installType": "npm",
    "tags": [
      "other",
      "ai"
    ],
    "sourceUrl": "https://github.com/hiromitsusasaki/raindrop-io-mcp-server"
  },
  {
    "id": "mcp_server",
    "name": "Mcp Server",
    "description": "Turn your [Make](https://www.make.com/) scenarios into callable tools for AI assistants.",
    "type": "local",
    "command": "npx",
    "args": [
      "mcp-server"
    ],
    "packageName": "mcp-server",
    "installType": "npm",
    "tags": [
      "other",
      "web",
      "ai"
    ],
    "sourceUrl": "https://github.com/integromat/make-mcp-server"
  },
  {
    "id": "wecombot_8706400b",
    "name": "Wecombot",
    "description": "\ud83d\ude80 \u2601\ufe0f  - An MCP server application that sends various types of messages to the WeCom group robot.",
    "type": "remote",
    "command": "npx",
    "args": [
      "wecombot"
    ],
    "packageName": "wecombot",
    "installType": "npm",
    "tags": [
      "communication",
      "messaging"
    ],
    "sourceUrl": "https://github.com/gotoolkits/mcp-wecombot-server.git"
  },
  {
    "id": "nostr_mcp_d6ab5634",
    "name": "Nostr Mcp",
    "description": "\ud83c\udf10 \u2601\ufe0f - A Nostr MCP server that allows to interact with Nostr, enabling posting notes, and more.",
    "type": "remote",
    "command": "npx",
    "args": [
      "nostr-mcp"
    ],
    "packageName": "nostr-mcp",
    "installType": "npm",
    "tags": [
      "communication"
    ],
    "sourceUrl": "https://github.com/AbdelStark/nostr-mcp"
  },
  {
    "id": "inbox_zero_b7df674a",
    "name": "Inbox Zero",
    "description": "\ud83d\udc0d \u2601\ufe0f - An MCP server for Inbox Zero. Adds functionality on top of Gmail like finding out which emails you need to reply to or need to follow up on.",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "inbox_zero"
    ],
    "packageName": "inbox-zero",
    "installType": "pip",
    "tags": [
      "communication",
      "ai"
    ],
    "sourceUrl": "https://github.com/elie222/inbox-zero/tree/main/apps/mcp-server"
  },
  {
    "id": "mac_messages_mcp_72f5f640",
    "name": "Mac_Messages_Mcp",
    "description": "An MCP server that securely interfaces with your iMessage database via the Model Context Protocol (MCP), allowing LLMs to query and analyze iMessage conversations.",
    "type": "local",
    "command": "npx",
    "args": [
      "mac_messages_mcp"
    ],
    "packageName": "mac_messages_mcp",
    "installType": "npm",
    "tags": [
      "communication",
      "database",
      "ai",
      "messaging"
    ],
    "sourceUrl": "https://github.com/carterlasalle/mac_messages_mcp"
  },
  {
    "id": "vrchat_mcp_4a8f2a50",
    "name": "Vrchat Mcp",
    "description": "\ud83d\udcc7 \ud83c\udfe0 This is an MCP server for interacting with the VRChat API. You can retrieve information about friends, worlds, avatars, and more in VRChat.",
    "type": "local",
    "command": "npx",
    "args": [
      "vrchat-mcp"
    ],
    "packageName": "vrchat-mcp",
    "installType": "npm",
    "tags": [
      "communication",
      "messaging"
    ],
    "sourceUrl": "https://github.com/sawa-zen/vrchat-mcp"
  },
  {
    "id": "inoyu_mcp_unomi_server_a17c25c4",
    "name": "Inoyu Mcp Unomi Server",
    "description": "An MCP server to access and updates profiles on an Apache Unomi CDP server.",
    "type": "remote",
    "command": "npx",
    "args": [
      "inoyu-mcp-unomi-server"
    ],
    "packageName": "inoyu-mcp-unomi-server",
    "installType": "npm",
    "tags": [
      "customer",
      "files"
    ],
    "sourceUrl": "https://github.com/sergehuber/inoyu-mcp-unomi-server"
  },
  {
    "id": "opendatamcp_cad51d49",
    "name": "Opendatamcp",
    "description": "Connect any Open Data to any LLM with Model Context Protocol.",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "OpenDataMCP"
    ],
    "packageName": "OpenDataMCP",
    "installType": "pip",
    "tags": [
      "customer",
      "ai"
    ],
    "sourceUrl": "https://github.com/OpenDataMCP/OpenDataMCP"
  },
  {
    "id": "mcp_server_iaptic_40456493",
    "name": "Mcp Server Iaptic",
    "description": "Connect with [iaptic](https://www.iaptic.com) to ask about your Customer Purchases, Transaction data and App Revenue statistics.",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-server-iaptic"
    ],
    "packageName": "mcp-server-iaptic",
    "installType": "npm",
    "tags": [
      "customer",
      "web"
    ],
    "sourceUrl": "https://github.com/iaptic/mcp-server-iaptic"
  },
  {
    "id": "airtable_mcp_6b335365",
    "name": "Airtable Mcp",
    "description": "Connect AI tools directly to Airtable. Query, create, update, and delete records using natural language.",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "airtable_mcp"
    ],
    "packageName": "airtable-mcp",
    "installType": "pip",
    "tags": [
      "databases",
      "database",
      "ai"
    ],
    "sourceUrl": "https://github.com/rashidazarang/airtable-mcp"
  },
  {
    "id": "server_postgres_868d63a8",
    "name": "Server Postgres",
    "description": "PostgreSQL database integration with schema inspection and query capabilities",
    "type": "local",
    "command": "npx",
    "args": [
      "server-postgres"
    ],
    "packageName": "server-postgres",
    "installType": "npm",
    "tags": [
      "databases",
      "database"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/postgres"
  },
  {
    "id": "server_sqlite_650274e1",
    "name": "Server Sqlite",
    "description": "SQLite database operations with built-in analysis features",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "server_sqlite"
    ],
    "packageName": "server-sqlite",
    "installType": "pip",
    "tags": [
      "databases",
      "database"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/sqlite"
  },
  {
    "id": "omniparser_autogui_mcp_06fc8c4c",
    "name": "Omniparser Autogui Mcp",
    "description": "\ud83d\udc0d Automatic operation of on-screen GUI.",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "omniparser_autogui_mcp"
    ],
    "packageName": "omniparser-autogui-mcp",
    "installType": "pip",
    "tags": [
      "developer"
    ],
    "sourceUrl": "https://github.com/NON906/omniparser-autogui-mcp"
  },
  {
    "id": "mcp_kibela_b1b32477",
    "name": "Mcp Kibela",
    "description": "\ud83d\udcc7 \u2601\ufe0f Allows AI models to interact with [Kibela](https://kibe.la/)",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-kibela"
    ],
    "packageName": "mcp-kibela",
    "installType": "npm",
    "tags": [
      "developer",
      "web",
      "ai"
    ],
    "sourceUrl": "https://github.com/kj455/mcp-kibela"
  },
  {
    "id": "mcp_graphql_1feac250",
    "name": "Mcp Graphql",
    "description": "Allows the AI to query GraphQL servers",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-graphql"
    ],
    "packageName": "mcp-graphql",
    "installType": "npm",
    "tags": [
      "developer",
      "ai"
    ],
    "sourceUrl": "https://github.com/blurrah/mcp-graphql"
  },
  {
    "id": "replicate_flux_mcp_bef0cdbc",
    "name": "Replicate Flux Mcp",
    "description": "Provides the ability to generate images via Replicate's API.",
    "type": "remote",
    "command": "npx",
    "args": [
      "replicate-flux-mcp"
    ],
    "packageName": "replicate-flux-mcp",
    "installType": "npm",
    "tags": [
      "developer"
    ],
    "sourceUrl": "https://github.com/awkoy/replicate-flux-mcp"
  },
  {
    "id": "server_google_drive_10b91715",
    "name": "Server Google Drive",
    "description": "Google Drive integration for listing, reading, and searching files",
    "type": "remote",
    "command": "npx",
    "args": [
      "server-google-drive"
    ],
    "packageName": "server-google-drive",
    "installType": "npm",
    "tags": [
      "file",
      "search",
      "files"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/gdrive"
  },
  {
    "id": "quarkus_mcp_servers_3749cd49",
    "name": "Quarkus Mcp Servers",
    "description": "A filesystem allowing for browsing and editing files implemented in Java using Quarkus. Available as jar or native image.",
    "type": "local",
    "command": "java",
    "args": [
      "-jar",
      "quarkus-mcp-servers.jar"
    ],
    "packageName": "quarkus-mcp-servers",
    "installType": "java",
    "tags": [
      "file",
      "files",
      "ai"
    ],
    "sourceUrl": "https://github.com/quarkiverse/quarkus-mcp-servers/tree/main/filesystem"
  },
  {
    "id": "mcp_server_opendal_99879475",
    "name": "Mcp Server Opendal",
    "description": "Access any storage with Apache OpenDAL\u2122",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_server_opendal"
    ],
    "packageName": "mcp-server-opendal",
    "installType": "pip",
    "tags": [
      "file",
      "files"
    ],
    "sourceUrl": "https://github.com/Xuanwo/mcp-server-opendal"
  },
  {
    "id": "coincap_mcp_11f18a13",
    "name": "Coincap Mcp",
    "description": "Real-time cryptocurrency market data integration using CoinCap's public API",
    "type": "remote",
    "command": "npx",
    "args": [
      "coincap-mcp"
    ],
    "packageName": "coincap-mcp",
    "installType": "npm",
    "tags": [
      "finance"
    ],
    "sourceUrl": "https://github.com/QuantGeekDev/coincap-mcp"
  },
  {
    "id": "coinmarket_mcp_server_ae6d2b80",
    "name": "Coinmarket Mcp Server",
    "description": "Coinmarket API integration to fetch cryptocurrency listings and quotes",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "coinmarket_mcp_server"
    ],
    "packageName": "coinmarket-mcp-server",
    "installType": "pip",
    "tags": [
      "finance",
      "web"
    ],
    "sourceUrl": "https://github.com/anjor/coinmarket-mcp-server"
  },
  {
    "id": "alpha_vantage_mcp_f774cca0",
    "name": "Alpha Vantage Mcp",
    "description": "Alpha Vantage API integration to fetch both stock and crypto information",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "alpha_vantage_mcp"
    ],
    "packageName": "alpha-vantage-mcp",
    "installType": "pip",
    "tags": [
      "finance",
      "web"
    ],
    "sourceUrl": "https://github.com/berlinbra/alpha-vantage-mcp"
  },
  {
    "id": "tasty_agent_cab57e06",
    "name": "Tasty Agent",
    "description": "Tastyworks API integration to handle trading activities on Tastytrade",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "tasty_agent"
    ],
    "packageName": "tasty-agent",
    "installType": "pip",
    "tags": [
      "finance"
    ],
    "sourceUrl": "https://github.com/ferdousbhai/tasty-agent"
  },
  {
    "id": "investor_agent_fb7ca372",
    "name": "Investor Agent",
    "description": "Yahoo Finance integration to fetch stock market data including options recommendations",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "investor_agent"
    ],
    "packageName": "investor-agent",
    "installType": "pip",
    "tags": [
      "finance",
      "web"
    ],
    "sourceUrl": "https://github.com/ferdousbhai/investor-agent"
  },
  {
    "id": "evm_mcp_server_3904879e",
    "name": "Evm Mcp Server",
    "description": "Comprehensive blockchain services for 30+ EVM networks",
    "type": "remote",
    "command": "npx",
    "args": [
      "evm-mcp-server"
    ],
    "packageName": "evm-mcp-server",
    "installType": "npm",
    "tags": [
      "finance",
      "ai"
    ],
    "sourceUrl": "https://github.com/mcpdotdirect/evm-mcp-server"
  },
  {
    "id": "onchain_mcp_249bdf69",
    "name": "Onchain Mcp",
    "description": "Bankless Onchain API to interact with smart contracts, query transaction and token information",
    "type": "remote",
    "command": "npx",
    "args": [
      "onchain-mcp"
    ],
    "packageName": "onchain-mcp",
    "installType": "npm",
    "tags": [
      "finance",
      "ai"
    ],
    "sourceUrl": "https://github.com/Bankless/onchain-mcp/"
  },
  {
    "id": "cryptopanic_mcp_server_6328fd44",
    "name": "Cryptopanic Mcp Server",
    "description": "Providing latest cryptocurrency news to AI agents, powered by CryptoPanic.",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "cryptopanic_mcp_server"
    ],
    "packageName": "cryptopanic-mcp-server",
    "installType": "pip",
    "tags": [
      "finance",
      "ai"
    ],
    "sourceUrl": "https://github.com/kukapay/cryptopanic-mcp-server"
  },
  {
    "id": "whale_tracker_mcp_9cde8cb5",
    "name": "Whale Tracker Mcp",
    "description": "A mcp server for tracking cryptocurrency whale transactions.",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "whale_tracker_mcp"
    ],
    "packageName": "whale-tracker-mcp",
    "installType": "pip",
    "tags": [
      "finance"
    ],
    "sourceUrl": "https://github.com/kukapay/whale-tracker-mcp"
  },
  {
    "id": "crypto_feargreed_mcp_0f75496f",
    "name": "Crypto Feargreed Mcp",
    "description": "Providing real-time and historical Crypto Fear & Greed Index data.",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "crypto_feargreed_mcp"
    ],
    "packageName": "crypto-feargreed-mcp",
    "installType": "pip",
    "tags": [
      "finance"
    ],
    "sourceUrl": "https://github.com/kukapay/crypto-feargreed-mcp"
  },
  {
    "id": "dune_analytics_mcp_dc267b51",
    "name": "Dune Analytics Mcp",
    "description": "A mcp server that bridges Dune Analytics data to AI agents.",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "dune_analytics_mcp"
    ],
    "packageName": "dune-analytics-mcp",
    "installType": "pip",
    "tags": [
      "finance",
      "ai",
      "analytics"
    ],
    "sourceUrl": "https://github.com/kukapay/dune-analytics-mcp"
  },
  {
    "id": "fantasy_pl_mcp_5c4ee065",
    "name": "Fantasy Pl Mcp",
    "description": "An MCP server for real-time Fantasy Premier League data and analysis tools.",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "fantasy_pl_mcp"
    ],
    "packageName": "fantasy-pl-mcp",
    "installType": "pip",
    "tags": [
      "gaming"
    ],
    "sourceUrl": "https://github.com/rishijatia/fantasy-pl-mcp/"
  },
  {
    "id": "server_memory_83800bf6",
    "name": "Server Memory",
    "description": "Knowledge graph-based persistent memory system for maintaining context",
    "type": "local",
    "command": "npx",
    "args": [
      "server-memory"
    ],
    "packageName": "server-memory",
    "installType": "npm",
    "tags": [
      "knowledge",
      "ai"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/memory"
  },
  {
    "id": "memorymesh_880a0b5a",
    "name": "Memorymesh",
    "description": "Enhanced graph-based memory with a focus on AI role-play and story generation",
    "type": "local",
    "command": "npx",
    "args": [
      "MemoryMesh"
    ],
    "packageName": "MemoryMesh",
    "installType": "npm",
    "tags": [
      "knowledge",
      "ai"
    ],
    "sourceUrl": "https://github.com/CheMiguel23/MemoryMesh"
  },
  {
    "id": "cognee_a539cda6",
    "name": "Cognee",
    "description": "Memory manager for AI apps and Agents using various graph and vector stores",
    "type": "local",
    "command": "npx",
    "args": [
      "cognee"
    ],
    "packageName": "cognee",
    "installType": "npm",
    "tags": [
      "knowledge",
      "ai"
    ],
    "sourceUrl": "https://github.com/topoteretes/cognee/tree/dev/cognee-mcp"
  },
  {
    "id": "mcp_ragdocs_0c580682",
    "name": "Mcp Ragdocs",
    "description": "An MCP server implementation that provides tools for retrieving and processing documentation through vector search",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "mcp_ragdocs"
    ],
    "packageName": "mcp-ragdocs",
    "installType": "pip",
    "tags": [
      "knowledge",
      "search"
    ],
    "sourceUrl": "https://github.com/hannesrudolph/mcp-ragdocs"
  },
  {
    "id": "mcp_zotero_9ea7f685",
    "name": "Mcp Zotero",
    "description": "A connector for LLMs to work with collections and sources on your Zotero Cloud",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-zotero"
    ],
    "packageName": "mcp-zotero",
    "installType": "npm",
    "tags": [
      "knowledge",
      "ai",
      "cloud"
    ],
    "sourceUrl": "https://github.com/kaliaboi/mcp-zotero"
  },
  {
    "id": "mcp_summarizer_b0f16b9e",
    "name": "Mcp Summarizer",
    "description": "AI Summarization MCP Server, Support for multiple content types",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-summarizer"
    ],
    "packageName": "mcp-summarizer",
    "installType": "npm",
    "tags": [
      "knowledge",
      "ai"
    ],
    "sourceUrl": "https://github.com/0xshellming/mcp-summarizer"
  },
  {
    "id": "graphlit_mcp_server_1649fc77",
    "name": "Graphlit Mcp Server",
    "description": "Ingest anything from Slack, Discord, websites, Google Drive, Linear or GitHub into a Graphlit project",
    "type": "remote",
    "command": "npx",
    "args": [
      "graphlit-mcp-server"
    ],
    "packageName": "graphlit-mcp-server",
    "installType": "npm",
    "tags": [
      "knowledge",
      "github",
      "search",
      "web",
      "messaging"
    ],
    "sourceUrl": "https://github.com/graphlit/graphlit-mcp-server"
  },
  {
    "id": "server_google_maps_c686eddb",
    "name": "Server Google Maps",
    "description": "Google Maps integration for location services, routing, and place details",
    "type": "remote",
    "command": "npx",
    "args": [
      "server-google-maps"
    ],
    "packageName": "server-google-maps",
    "installType": "npm",
    "tags": [
      "location",
      "search",
      "ai"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/google-maps"
  },
  {
    "id": "mcp_timeserver_f7621357",
    "name": "Mcp Timeserver",
    "description": "Access the time in any timezone and get the current local time",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "MCP_timeserver"
    ],
    "packageName": "MCP-timeserver",
    "installType": "pip",
    "tags": [
      "location"
    ],
    "sourceUrl": "https://github.com/SecretiveShell/MCP-timeserver"
  },
  {
    "id": "mcp_geo_aabc5c29",
    "name": "Mcp Geo",
    "description": "Geocoding MCP server for nominatim, ArcGIS, Bing",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "MCP_Geo"
    ],
    "packageName": "MCP-Geo",
    "installType": "pip",
    "tags": [
      "location"
    ],
    "sourceUrl": "https://github.com/webcoderz/MCP-Geo"
  },
  {
    "id": "mcp_server_ipinfo_4b31a656",
    "name": "Mcp Server Ipinfo",
    "description": "IP address geolocation and network information using IPInfo API",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_server_ipinfo"
    ],
    "packageName": "mcp-server-ipinfo",
    "installType": "pip",
    "tags": [
      "location"
    ],
    "sourceUrl": "https://github.com/briandconnelly/mcp-server-ipinfo"
  },
  {
    "id": "qgis_mcp_d3b5c2ff",
    "name": "Qgis_Mcp",
    "description": "connects QGIS Desktop to Claude AI through the MCP",
    "type": "local",
    "command": "npx",
    "args": [
      "qgis_mcp"
    ],
    "packageName": "qgis_mcp",
    "installType": "npm",
    "tags": [
      "location",
      "ai"
    ],
    "sourceUrl": "https://github.com/jjsantos01/qgis_mcp"
  },
  {
    "id": "nearby_search_mcp_9599709b",
    "name": "Nearby Search Mcp",
    "description": "An MCP server for nearby place searches with IP-based location detection.",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "nearby_search_mcp"
    ],
    "packageName": "nearby-search-mcp",
    "installType": "pip",
    "tags": [
      "location",
      "search"
    ],
    "sourceUrl": "https://github.com/kukapay/nearby-search-mcp"
  },
  {
    "id": "osp_marketing_tools_cedfddef",
    "name": "Osp_Marketing_Tools",
    "description": "A suite of marketing tools from Open Strategy Partners including writing style, editing codes, and product marketing value map creation.",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "osp_marketing_tools"
    ],
    "packageName": "osp_marketing_tools",
    "installType": "pip",
    "tags": [
      "marketing"
    ],
    "sourceUrl": "https://github.com/open-strategy-partners/osp_marketing_tools"
  },
  {
    "id": "server_sentry_c90765f0",
    "name": "Server Sentry",
    "description": "Sentry.io integration for error tracking and performance monitoring",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "server_sentry"
    ],
    "packageName": "server-sentry",
    "installType": "pip",
    "tags": [
      "monitoring"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/sentry"
  },
  {
    "id": "server_raygun_022bc655",
    "name": "Server Raygun",
    "description": "Raygun API V3 integration for crash reporting and real user monitoring",
    "type": "remote",
    "command": "npx",
    "args": [
      "server-raygun"
    ],
    "packageName": "server-raygun",
    "installType": "npm",
    "tags": [
      "monitoring"
    ],
    "sourceUrl": "https://github.com/MindscapeHQ/mcp-server-raygun"
  },
  {
    "id": "metoro_mcp_server_fa3d278f",
    "name": "Metoro Mcp Server",
    "description": "Query and interact with kubernetes environments monitored by Metoro",
    "type": "remote",
    "command": "metoro-mcp-server",
    "args": [],
    "packageName": "metoro-mcp-server",
    "installType": "go",
    "tags": [
      "monitoring"
    ],
    "sourceUrl": "https://github.com/metoro-io/metoro-mcp-server"
  },
  {
    "id": "mcp_grafana_b3c6e75e",
    "name": "Mcp Grafana",
    "description": "Search dashboards, investigate incidents and query datasources in your Grafana instance",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_grafana"
    ],
    "packageName": "mcp-grafana",
    "installType": "pip",
    "tags": [
      "monitoring",
      "search"
    ],
    "sourceUrl": "https://github.com/grafana/mcp-grafana"
  },
  {
    "id": "server_brave_search_606afef5",
    "name": "Server Brave Search",
    "description": "Web search capabilities using Brave's Search API",
    "type": "remote",
    "command": "npx",
    "args": [
      "server-brave-search"
    ],
    "packageName": "server-brave-search",
    "installType": "npm",
    "tags": [
      "search",
      "web"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/brave-search"
  },
  {
    "id": "server_fetch_fe2001fb",
    "name": "Server Fetch",
    "description": "Efficient web content fetching and processing for AI consumption",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "server_fetch"
    ],
    "packageName": "server-fetch",
    "installType": "pip",
    "tags": [
      "search",
      "web",
      "ai"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/fetch"
  },
  {
    "id": "mcp_server_tavily_92fb4e8c",
    "name": "Mcp Server Tavily",
    "description": "MCP Server",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_server_tavily"
    ],
    "packageName": "mcp-server-tavily",
    "installType": "pip",
    "tags": [
      "search"
    ],
    "sourceUrl": "https://github.com/Tomatio13/mcp-server-tavily"
  },
  {
    "id": "mcp_tavily_2722b3e3",
    "name": "Mcp Tavily",
    "description": "MCP Server",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-tavily"
    ],
    "packageName": "mcp-tavily",
    "installType": "npm",
    "tags": [
      "search"
    ],
    "sourceUrl": "https://github.com/kshern/mcp-tavily.git"
  },
  {
    "id": "mcp_dnstwist_c29443b8",
    "name": "Mcp Dnstwist",
    "description": "MCP server for dnstwist, a powerful DNS fuzzing tool",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-dnstwist"
    ],
    "packageName": "mcp-dnstwist",
    "installType": "npm",
    "tags": [
      "security"
    ],
    "sourceUrl": "https://github.com/BurtTheCoder/mcp-dnstwist"
  },
  {
    "id": "mcp_maigret_abb0cedc",
    "name": "Mcp Maigret",
    "description": "MCP server for maigret, a powerful OSINT tool that collects user account information",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-maigret"
    ],
    "packageName": "mcp-maigret",
    "installType": "npm",
    "tags": [
      "security",
      "ai"
    ],
    "sourceUrl": "https://github.com/BurtTheCoder/mcp-maigret"
  },
  {
    "id": "mcp_shodan_7b70ecea",
    "name": "Mcp Shodan",
    "description": "MCP server for querying the Shodan API and Shodan CVEDB",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-shodan"
    ],
    "packageName": "mcp-shodan",
    "installType": "npm",
    "tags": [
      "security"
    ],
    "sourceUrl": "https://github.com/BurtTheCoder/mcp-shodan"
  },
  {
    "id": "mcp_virustotal_416473c3",
    "name": "Mcp Virustotal",
    "description": "MCP server for querying the VirusTotal API",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-virustotal"
    ],
    "packageName": "mcp-virustotal",
    "installType": "npm",
    "tags": [
      "security"
    ],
    "sourceUrl": "https://github.com/BurtTheCoder/mcp-virustotal"
  },
  {
    "id": "mcp_security_3c87f2a3",
    "name": "Mcp_Security",
    "description": "MCP server for querying the ORKL API",
    "type": "remote",
    "command": "npx",
    "args": [
      "MCP_Security"
    ],
    "packageName": "MCP_Security",
    "installType": "npm",
    "tags": [
      "security"
    ],
    "sourceUrl": "https://github.com/fr0gger/MCP_Security"
  },
  {
    "id": "mcp_security_audit_524a9713",
    "name": "Mcp Security Audit",
    "description": "MCP Server",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-security-audit"
    ],
    "packageName": "mcp-security-audit",
    "installType": "npm",
    "tags": [
      "security"
    ],
    "sourceUrl": "https://github.com/qianniuspace/mcp-security-audit"
  },
  {
    "id": "mcp_server_airbnb_c0559b60",
    "name": "Mcp Server Airbnb",
    "description": "Provides tools to search Airbnb and get listing details",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-server-airbnb"
    ],
    "packageName": "mcp-server-airbnb",
    "installType": "npm",
    "tags": [
      "travel",
      "search",
      "ai"
    ],
    "sourceUrl": "https://github.com/openbnb-org/mcp-server-airbnb"
  },
  {
    "id": "ns_mcp_server_dab22c74",
    "name": "Ns Mcp Server",
    "description": "Access Dutch Railways (NS) travel information, schedules, and real-time updates",
    "type": "remote",
    "command": "npx",
    "args": [
      "ns-mcp-server"
    ],
    "packageName": "ns-mcp-server",
    "installType": "npm",
    "tags": [
      "travel",
      "ai"
    ],
    "sourceUrl": "https://github.com/r-huijts/ns-mcp-server"
  },
  {
    "id": "server_github_3c6d4612",
    "name": "Server Github",
    "description": "GitHub API integration for repository management, PRs, issues, and more",
    "type": "remote",
    "command": "npx",
    "args": [
      "server-github"
    ],
    "packageName": "server-github",
    "installType": "npm",
    "tags": [
      "version",
      "github"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/github"
  },
  {
    "id": "server_gitlab_5593dfe3",
    "name": "Server Gitlab",
    "description": "GitLab platform integration for project management and CI/CD operations",
    "type": "remote",
    "command": "npx",
    "args": [
      "server-gitlab"
    ],
    "packageName": "server-gitlab",
    "installType": "npm",
    "tags": [
      "version",
      "github"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/gitlab"
  },
  {
    "id": "server_git_2d5140fb",
    "name": "Server Git",
    "description": "Direct Git repository operations including reading, searching, and analyzing local repositories",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "server_git"
    ],
    "packageName": "server-git",
    "installType": "pip",
    "tags": [
      "version",
      "github",
      "search"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/git"
  },
  {
    "id": "mcp_git_ingest_4a1c3eee",
    "name": "Mcp Git Ingest",
    "description": "Read and analyze GitHub repositories with your LLM",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "mcp_git_ingest"
    ],
    "packageName": "mcp-git-ingest",
    "installType": "pip",
    "tags": [
      "version",
      "github",
      "ai"
    ],
    "sourceUrl": "https://github.com/adhikasp/mcp-git-ingest"
  },
  {
    "id": "actors_mcp_server_2c562ff3",
    "name": "Actors Mcp Server",
    "description": "Use 3,000+ pre-built cloud tools, known as Actors",
    "type": "remote",
    "command": "npx",
    "args": [
      "actors-mcp-server"
    ],
    "packageName": "actors-mcp-server",
    "installType": "npm",
    "tags": [
      "other",
      "cloud"
    ],
    "sourceUrl": "https://github.com/apify/actors-mcp-server"
  },
  {
    "id": "contentful_mcp_7cc4dc71",
    "name": "Contentful Mcp",
    "description": "Update, create, delete content, content-models and assets in your Contentful Space",
    "type": "local",
    "command": "npx",
    "args": [
      "contentful-mcp"
    ],
    "packageName": "contentful-mcp",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/ivo-toby/contentful-mcp"
  },
  {
    "id": "mcp_openai_17eff69d",
    "name": "Mcp Openai",
    "description": "Chat with OpenAI's smartest models",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-openai"
    ],
    "packageName": "mcp-openai",
    "installType": "npm",
    "tags": [
      "other",
      "ai",
      "messaging"
    ],
    "sourceUrl": "https://github.com/mzxrai/mcp-openai"
  },
  {
    "id": "godoc_mcp_fabc1529",
    "name": "Godoc Mcp",
    "description": "Token-efficient Go documentation server",
    "type": "local",
    "command": "godoc-mcp",
    "args": [],
    "packageName": "godoc-mcp",
    "installType": "go",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/mrjoshuak/godoc-mcp"
  },
  {
    "id": "mcp_server_openai_d4da54aa",
    "name": "Mcp Server Openai",
    "description": "Query OpenAI models directly from Claude using MCP protocol",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_server_openai"
    ],
    "packageName": "mcp-server-openai",
    "installType": "pip",
    "tags": [
      "other",
      "ai"
    ],
    "sourceUrl": "https://github.com/pierrebrunelle/mcp-server-openai"
  },
  {
    "id": "server_everything_f295a56e",
    "name": "Server Everything",
    "description": "MCP server that exercises all the features of the MCP protocol",
    "type": "local",
    "command": "npx",
    "args": [
      "server-everything"
    ],
    "packageName": "server-everything",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/everything"
  },
  {
    "id": "phabricator_mcp_server_1638f5fa",
    "name": "Phabricator Mcp Server",
    "description": "Interacting with Phabricator API",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "phabricator_mcp_server"
    ],
    "packageName": "phabricator-mcp-server",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/baba786/phabricator-mcp-server"
  },
  {
    "id": "mcp_obsidian_35d4fbdf",
    "name": "Mcp Obsidian",
    "description": "Interacting with Obsidian via REST API",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_obsidian"
    ],
    "packageName": "mcp-obsidian",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/MarkusPfundstein/mcp-obsidian"
  },
  {
    "id": "mcp_obsidian_a678113f",
    "name": "Mcp Obsidian",
    "description": "This is a connector to allow Claude Desktop (or any MCP client) to read and search any directory containing Markdown notes",
    "type": "local",
    "command": "npx",
    "args": [
      "mcp-obsidian"
    ],
    "packageName": "mcp-obsidian",
    "installType": "npm",
    "tags": [
      "other",
      "search",
      "ai"
    ],
    "sourceUrl": "https://github.com/calclavia/mcp-obsidian"
  },
  {
    "id": "mcp_youtube_e6e85aad",
    "name": "Mcp Youtube",
    "description": "Fetch YouTube subtitles",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-youtube"
    ],
    "packageName": "mcp-youtube",
    "installType": "npm",
    "tags": [
      "other",
      "web"
    ],
    "sourceUrl": "https://github.com/anaisbetts/mcp-youtube"
  },
  {
    "id": "tiktok_mcp_601a0f72",
    "name": "Tiktok Mcp",
    "description": "Interact with TikTok videos",
    "type": "remote",
    "command": "npx",
    "args": [
      "tiktok-mcp"
    ],
    "packageName": "tiktok-mcp",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/Seym0n/tiktok-mcp"
  },
  {
    "id": "notion_mcp_89caf004",
    "name": "Notion_Mcp",
    "description": "Integrates with Notion's API to manage personal todo lists",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "notion_mcp"
    ],
    "packageName": "notion_mcp",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/danhilse/notion_mcp"
  },
  {
    "id": "wcgw_8a66fc92",
    "name": "Wcgw",
    "description": "Autonomous shell execution, computer control and coding agent (Mac)",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "wcgw"
    ],
    "packageName": "wcgw",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/rusiaaman/wcgw/blob/main/src/wcgw/client/mcp_server/Readme.md"
  },
  {
    "id": "ancestry_mcp_a0dee916",
    "name": "Ancestry Mcp",
    "description": "Allows the AI to read .ged files and genetic data",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "ancestry_mcp"
    ],
    "packageName": "ancestry-mcp",
    "installType": "pip",
    "tags": [
      "other",
      "files",
      "ai"
    ],
    "sourceUrl": "https://github.com/reeeeemo/ancestry-mcp"
  },
  {
    "id": "apple_notes_mcp_6cdf5bc5",
    "name": "Apple Notes Mcp",
    "description": "Allows the AI to read from your local Apple Notes database (macOS only)",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "apple_notes_mcp"
    ],
    "packageName": "apple-notes-mcp",
    "installType": "pip",
    "tags": [
      "other",
      "database",
      "ai"
    ],
    "sourceUrl": "https://github.com/sirmews/apple-notes-mcp"
  },
  {
    "id": "mcp_notion_server_afdc23a3",
    "name": "Mcp Notion Server",
    "description": "Interacting with Notion API",
    "type": "local",
    "command": "npx",
    "args": [
      "mcp-notion-server"
    ],
    "packageName": "mcp-notion-server",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/suekou/mcp-notion-server"
  },
  {
    "id": "unichat_mcp_server_d8f3617e",
    "name": "Unichat Mcp Server",
    "description": "Send requests to OpenAI, MistralAI, Anthropic, xAI, Google AI or DeepSeek using MCP protocol",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "unichat_mcp_server"
    ],
    "packageName": "unichat-mcp-server",
    "installType": "pip",
    "tags": [
      "other",
      "search",
      "ai",
      "messaging"
    ],
    "sourceUrl": "https://github.com/amidabuddha/unichat-mcp-server"
  },
  {
    "id": "mcp_miro_72d90ff3",
    "name": "Mcp Miro",
    "description": "Access MIRO whiteboards, bulk create and read items",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-miro"
    ],
    "packageName": "mcp-miro",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/evalstate/mcp-miro"
  },
  {
    "id": "jira_mcp_server_8fd68369",
    "name": "Jira Mcp Server",
    "description": "Get Confluence data via CQL and read pages",
    "type": "remote",
    "command": "npx",
    "args": [
      "jira-mcp-server"
    ],
    "packageName": "jira-mcp-server",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/KS-GEN-AI/jira-mcp-server"
  },
  {
    "id": "confluence_mcp_server_4e52a6ed",
    "name": "Confluence Mcp Server",
    "description": "Read jira data via JQL and api and execute requests to create and edit tickets",
    "type": "remote",
    "command": "npx",
    "args": [
      "confluence-mcp-server"
    ],
    "packageName": "confluence-mcp-server",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/KS-GEN-AI/confluence-mcp-server"
  },
  {
    "id": "mcp_atlassian_b9431af8",
    "name": "Mcp Atlassian",
    "description": "MCP server for Atlassian products (Confluence and Jira)",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_atlassian"
    ],
    "packageName": "mcp-atlassian",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/sooperset/mcp-atlassian"
  },
  {
    "id": "any_chat_completions_mcp_d5ec3cd4",
    "name": "Any Chat Completions Mcp",
    "description": "Chat with any other OpenAI SDK Compatible Chat Completions API",
    "type": "local",
    "command": "npx",
    "args": [
      "any-chat-completions-mcp"
    ],
    "packageName": "any-chat-completions-mcp",
    "installType": "npm",
    "tags": [
      "other",
      "ai",
      "messaging"
    ],
    "sourceUrl": "https://github.com/pyroprompts/any-chat-completions-mcp"
  },
  {
    "id": "mcp_installer_0d13b1c5",
    "name": "Mcp Installer",
    "description": "An MCP server that installs other MCP servers for you",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "mcp_installer"
    ],
    "packageName": "mcp-installer",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/anaisbetts/mcp-installer"
  },
  {
    "id": "mcp_server_perplexity_881206b4",
    "name": "Mcp Server Perplexity",
    "description": "Interacting with Perplexity API",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_server_perplexity"
    ],
    "packageName": "mcp-server-perplexity",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/tanigami/mcp-server-perplexity"
  },
  {
    "id": "wikimedia_enterprise_model_context_protocol_02ea5ec2",
    "name": "Wikimedia Enterprise Model Context Protocol",
    "description": "Wikipedia Article lookup API",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "wikimedia_enterprise_model_context_protocol"
    ],
    "packageName": "wikimedia-enterprise-model-context-protocol",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://gitlab.wikimedia.org/repos/future-audiences/wikimedia-enterprise-model-context-protocol"
  },
  {
    "id": "mcp_simple_timeserver_6da4b48b",
    "name": "Mcp Simple Timeserver",
    "description": "An MCP server that allows checking local time on the client machine or current UTC time from an NTP server",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_simple_timeserver"
    ],
    "packageName": "mcp-simple-timeserver",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/andybrandt/mcp-simple-timeserver"
  },
  {
    "id": "mcp_simple_openai_assistant_6ad83177",
    "name": "Mcp Simple Openai Assistant",
    "description": "\ud83d\udc0d \u2601\ufe0f MCP to talk to OpenAI assistants",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_simple_openai_assistant"
    ],
    "packageName": "mcp-simple-openai-assistant",
    "installType": "pip",
    "tags": [
      "other",
      "ai"
    ],
    "sourceUrl": "https://github.com/andybrandt/mcp-simple-openai-assistant"
  },
  {
    "id": "mcp_hfspace_3ab3febb",
    "name": "Mcp Hfspace",
    "description": "Use HuggingFace Spaces directly from Claude",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-hfspace"
    ],
    "packageName": "mcp-hfspace",
    "installType": "npm",
    "tags": [
      "other",
      "ai"
    ],
    "sourceUrl": "https://github.com/evalstate/mcp-hfspace"
  },
  {
    "id": "mcp_manager_3d88c2aa",
    "name": "Mcp Manager",
    "description": "Simple Web UI to install and manage MCP servers for Claude Desktop App",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-manager"
    ],
    "packageName": "mcp-manager",
    "installType": "npm",
    "tags": [
      "other",
      "web",
      "ai"
    ],
    "sourceUrl": "https://github.com/zueai/mcp-manager"
  },
  {
    "id": "mcp_cli_d7e2d618",
    "name": "Mcp Cli",
    "description": "CLI tool for testing MCP servers",
    "type": "local",
    "command": "npx",
    "args": [
      "mcp-cli"
    ],
    "packageName": "mcp-cli",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/wong2/mcp-cli"
  },
  {
    "id": "mcp_vegalite_server_1953bf1b",
    "name": "Mcp Vegalite Server",
    "description": "Generate visualizations from fetched data using the VegaLite format and renderer",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "mcp_vegalite_server"
    ],
    "packageName": "mcp-vegalite-server",
    "installType": "pip",
    "tags": [
      "other",
      "web"
    ],
    "sourceUrl": "https://github.com/isaacwasserman/mcp-vegalite-server"
  },
  {
    "id": "homeassistant_mcp_97491ffa",
    "name": "Homeassistant Mcp",
    "description": "Access Home Assistant data and control devices",
    "type": "local",
    "command": "npx",
    "args": [
      "homeassistant-mcp"
    ],
    "packageName": "homeassistant-mcp",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/tevonsb/homeassistant-mcp"
  },
  {
    "id": "mcp_server_home_assistant_cca971aa",
    "name": "Mcp Server Home Assistant",
    "description": "Expose all Home Assistant voice intents through a Model Context Protocol Server",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "mcp_server_home_assistant"
    ],
    "packageName": "mcp-server-home-assistant",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/allenporter/mcp-server-home-assistant"
  },
  {
    "id": "all_in_one_model_context_protocol_2832628d",
    "name": "All In One Model Context Protocol",
    "description": "Some useful tools for developer",
    "type": "local",
    "command": "all-in-one-model-context-protocol",
    "args": [],
    "packageName": "all-in-one-model-context-protocol",
    "installType": "go",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/nguyenvanduocit/all-in-one-model-context-protocol"
  },
  {
    "id": "mac_apps_launcher_mcp_server_09bd8da6",
    "name": "Mac Apps Launcher Mcp Server",
    "description": "An MCP server to list and launch applications on MacOS",
    "type": "local",
    "command": "npx",
    "args": [
      "mac-apps-launcher-mcp-server"
    ],
    "packageName": "mac-apps-launcher-mcp-server",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/JoshuaRileyDev/mac-apps-launcher"
  },
  {
    "id": "mcp_datetime_0def08f1",
    "name": "Mcp Datetime",
    "description": "MCP server providing date and time functions in various formats",
    "type": "local",
    "command": "npx",
    "args": [
      "mcp-datetime"
    ],
    "packageName": "mcp-datetime",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/ZeparHyfar/mcp-datetime"
  },
  {
    "id": "mcp_wolfram_alpha_0a5ad23b",
    "name": "Mcp Wolfram Alpha",
    "description": "An MCP server for querying wolfram alpha API",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "MCP_wolfram_alpha"
    ],
    "packageName": "MCP-wolfram-alpha",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/SecretiveShell/MCP-wolfram-alpha"
  },
  {
    "id": "mcp_server_amazon_bedrock_98369d34",
    "name": "Mcp Server Amazon Bedrock",
    "description": "Use Amazon Nova Canvas model for image generation",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-server-amazon-bedrock"
    ],
    "packageName": "mcp-server-amazon-bedrock",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/zxkane/mcp-server-amazon-bedrock"
  },
  {
    "id": "piapi_mcp_server_a0acbbe5",
    "name": "Piapi Mcp Server",
    "description": "MCP Server",
    "type": "remote",
    "command": "npx",
    "args": [
      "piapi-mcp-server"
    ],
    "packageName": "piapi-mcp-server",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/apinetwork/piapi-mcp-server"
  },
  {
    "id": "difyworkflow_84f8a243",
    "name": "Difyworkflow",
    "description": "\ud83c\udfce\ufe0f \u2601\ufe0f Tools to the query and execute of Dify workflows",
    "type": "remote",
    "command": "DifyWorkflow",
    "args": [],
    "packageName": "DifyWorkflow",
    "installType": "go",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/gotoolkits/mcp-difyworkflow-server"
  },
  {
    "id": "hn_server_df5cacc8",
    "name": "Hn Server",
    "description": "\ud83d\udcc7 \u2601\ufe0f Parses the HTML content from news.ycombinator.com (Hacker News)",
    "type": "remote",
    "command": "npx",
    "args": [
      "hn-server"
    ],
    "packageName": "hn-server",
    "installType": "npm",
    "tags": [
      "other",
      "ai"
    ],
    "sourceUrl": "https://github.com/pskill9/hn-server"
  },
  {
    "id": "screenpipe_bbe72553",
    "name": "Screenpipe",
    "description": "\ud83c\udf96\ufe0f \ud83e\udd80 \ud83c\udfe0 \ud83c\udf4e Local-first system capturing screen/audio with timestamped indexing",
    "type": "local",
    "command": "screenpipe",
    "args": [],
    "packageName": "screenpipe",
    "installType": "cargo",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/mediar-ai/screenpipe"
  },
  {
    "id": "bear_mcp_server_1f0d88ae",
    "name": "Bear Mcp Server",
    "description": "Allows the AI to read from your Bear Notes (macOS only)",
    "type": "local",
    "command": "npx",
    "args": [
      "bear-mcp-server"
    ],
    "packageName": "bear-mcp-server",
    "installType": "npm",
    "tags": [
      "other",
      "ai"
    ],
    "sourceUrl": "https://github.com/akseyh/bear-mcp-server"
  },
  {
    "id": "mcp_server_jfx_56725ed8",
    "name": "Mcp Server Jfx",
    "description": "Draw on JavaFX canvas",
    "type": "local",
    "command": "java",
    "args": [
      "-jar",
      "mcp-server-jfx.jar"
    ],
    "packageName": "mcp-server-jfx",
    "installType": "java",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/quarkiverse/quarkus-mcp-servers/tree/main/jfx"
  },
  {
    "id": "attio_mcp_server_8153e3c4",
    "name": "Attio Mcp Server",
    "description": "\ud83d\udcc7 \u2601\ufe0f Allows AI clients to manage records and notes in Attio CRM",
    "type": "remote",
    "command": "npx",
    "args": [
      "attio-mcp-server"
    ],
    "packageName": "attio-mcp-server",
    "installType": "npm",
    "tags": [
      "other",
      "ai"
    ],
    "sourceUrl": "https://github.com/hmk/attio-mcp-server"
  },
  {
    "id": "mcp_server_asana_1eb63d73",
    "name": "Mcp Server Asana",
    "description": "\ud83d\udcc7 \u2601\ufe0f This Model Context Protocol server implementation of Asana",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-server-asana"
    ],
    "packageName": "mcp-server-asana",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/roychri/mcp-server-asana"
  },
  {
    "id": "ws_mcp_086a3113",
    "name": "Ws Mcp",
    "description": "Wrap MCP servers with a WebSocket (for use with [kitbitz](https://github.com/nick1udwig/kibitz))",
    "type": "local",
    "command": "npx",
    "args": [
      "ws-mcp"
    ],
    "packageName": "ws-mcp",
    "installType": "npm",
    "tags": [
      "other",
      "github",
      "web"
    ],
    "sourceUrl": "https://github.com/nick1udwig/ws-mcp"
  },
  {
    "id": "bitcoin_mcp_288f9ba7",
    "name": "Bitcoin Mcp",
    "description": "\u20bf A Model Context Protocol (MCP) server that enables AI models to interact with Bitcoin",
    "type": "local",
    "command": "npx",
    "args": [
      "bitcoin-mcp"
    ],
    "packageName": "bitcoin-mcp",
    "installType": "npm",
    "tags": [
      "other",
      "ai",
      "finance"
    ],
    "sourceUrl": "https://github.com/AbdelStark/bitcoin-mcp"
  },
  {
    "id": "strava_mcp_server_6b91eac2",
    "name": "Strava Mcp Server",
    "description": "An MCP server for Strava, an app for tracking physical exercise",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "strava_mcp_server"
    ],
    "packageName": "strava-mcp-server",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/tomekkorbak/strava-mcp-server"
  },
  {
    "id": "oura_mcp_server_4b73920a",
    "name": "Oura Mcp Server",
    "description": "An MCP server for Oura, an app for tracking sleep",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "oura_mcp_server"
    ],
    "packageName": "oura-mcp-server",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/tomekkorbak/oura-mcp-server"
  },
  {
    "id": "rember_mcp_3b13825d",
    "name": "Rember Mcp",
    "description": "Create spaced repetition flashcards in [Rember](https://rember.com)",
    "type": "local",
    "command": "npx",
    "args": [
      "rember-mcp"
    ],
    "packageName": "rember-mcp",
    "installType": "npm",
    "tags": [
      "other",
      "web"
    ],
    "sourceUrl": "https://github.com/rember/rember-mcp"
  },
  {
    "id": "raindrop_io_mcp_server_b4633856",
    "name": "Raindrop Io Mcp Server",
    "description": "An integration that allows LLMs to interact with Raindrop.io bookmarks",
    "type": "remote",
    "command": "npx",
    "args": [
      "raindrop-io-mcp-server"
    ],
    "packageName": "raindrop-io-mcp-server",
    "installType": "npm",
    "tags": [
      "other",
      "ai"
    ],
    "sourceUrl": "https://github.com/hiromitsusasaki/raindrop-io-mcp-server"
  },
  {
    "id": "mcp_server_38eac328",
    "name": "Mcp Server",
    "description": "Turn your [Make](https://www.make.com/) scenarios into callable tools for AI assistants.",
    "type": "local",
    "command": "npx",
    "args": [
      "mcp-server"
    ],
    "packageName": "mcp-server",
    "installType": "npm",
    "tags": [
      "other",
      "web",
      "ai"
    ],
    "sourceUrl": "https://github.com/integromat/make-mcp-server"
  },
  {
    "id": "wecombot_6023fab7",
    "name": "Wecombot",
    "description": "\ud83d\ude80 \u2601\ufe0f  - An MCP server application that sends various types of messages to the WeCom group robot.",
    "type": "remote",
    "command": "npx",
    "args": [
      "wecombot"
    ],
    "packageName": "wecombot",
    "installType": "npm",
    "tags": [
      "communication",
      "messaging"
    ],
    "sourceUrl": "https://github.com/gotoolkits/mcp-wecombot-server.git"
  },
  {
    "id": "nostr_mcp_d48c0ca9",
    "name": "Nostr Mcp",
    "description": "\ud83c\udf10 \u2601\ufe0f - A Nostr MCP server that allows to interact with Nostr, enabling posting notes, and more.",
    "type": "remote",
    "command": "npx",
    "args": [
      "nostr-mcp"
    ],
    "packageName": "nostr-mcp",
    "installType": "npm",
    "tags": [
      "communication"
    ],
    "sourceUrl": "https://github.com/AbdelStark/nostr-mcp"
  },
  {
    "id": "inbox_zero_8cef06a5",
    "name": "Inbox Zero",
    "description": "\ud83d\udc0d \u2601\ufe0f - An MCP server for Inbox Zero. Adds functionality on top of Gmail like finding out which emails you need to reply to or need to follow up on.",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "inbox_zero"
    ],
    "packageName": "inbox-zero",
    "installType": "pip",
    "tags": [
      "communication",
      "ai"
    ],
    "sourceUrl": "https://github.com/elie222/inbox-zero/tree/main/apps/mcp-server"
  },
  {
    "id": "mac_messages_mcp_b9b0cee5",
    "name": "Mac_Messages_Mcp",
    "description": "An MCP server that securely interfaces with your iMessage database via the Model Context Protocol (MCP), allowing LLMs to query and analyze iMessage conversations.",
    "type": "local",
    "command": "npx",
    "args": [
      "mac_messages_mcp"
    ],
    "packageName": "mac_messages_mcp",
    "installType": "npm",
    "tags": [
      "communication",
      "database",
      "ai",
      "messaging"
    ],
    "sourceUrl": "https://github.com/carterlasalle/mac_messages_mcp"
  },
  {
    "id": "vrchat_mcp_d6b7ae28",
    "name": "Vrchat Mcp",
    "description": "\ud83d\udcc7 \ud83c\udfe0 This is an MCP server for interacting with the VRChat API. You can retrieve information about friends, worlds, avatars, and more in VRChat.",
    "type": "local",
    "command": "npx",
    "args": [
      "vrchat-mcp"
    ],
    "packageName": "vrchat-mcp",
    "installType": "npm",
    "tags": [
      "communication",
      "messaging"
    ],
    "sourceUrl": "https://github.com/sawa-zen/vrchat-mcp"
  },
  {
    "id": "inoyu_mcp_unomi_server_6f3347b7",
    "name": "Inoyu Mcp Unomi Server",
    "description": "An MCP server to access and updates profiles on an Apache Unomi CDP server.",
    "type": "remote",
    "command": "npx",
    "args": [
      "inoyu-mcp-unomi-server"
    ],
    "packageName": "inoyu-mcp-unomi-server",
    "installType": "npm",
    "tags": [
      "customer",
      "files"
    ],
    "sourceUrl": "https://github.com/sergehuber/inoyu-mcp-unomi-server"
  },
  {
    "id": "opendatamcp_9c9bbf9f",
    "name": "Opendatamcp",
    "description": "Connect any Open Data to any LLM with Model Context Protocol.",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "OpenDataMCP"
    ],
    "packageName": "OpenDataMCP",
    "installType": "pip",
    "tags": [
      "customer",
      "ai"
    ],
    "sourceUrl": "https://github.com/OpenDataMCP/OpenDataMCP"
  },
  {
    "id": "mcp_server_iaptic_20d2e9df",
    "name": "Mcp Server Iaptic",
    "description": "Connect with [iaptic](https://www.iaptic.com) to ask about your Customer Purchases, Transaction data and App Revenue statistics.",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-server-iaptic"
    ],
    "packageName": "mcp-server-iaptic",
    "installType": "npm",
    "tags": [
      "customer",
      "web"
    ],
    "sourceUrl": "https://github.com/iaptic/mcp-server-iaptic"
  },
  {
    "id": "airtable_mcp_31f9ac05",
    "name": "Airtable Mcp",
    "description": "Connect AI tools directly to Airtable. Query, create, update, and delete records using natural language.",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "airtable_mcp"
    ],
    "packageName": "airtable-mcp",
    "installType": "pip",
    "tags": [
      "databases",
      "database",
      "ai"
    ],
    "sourceUrl": "https://github.com/rashidazarang/airtable-mcp"
  },
  {
    "id": "server_postgres_71652a69",
    "name": "Server Postgres",
    "description": "PostgreSQL database integration with schema inspection and query capabilities",
    "type": "local",
    "command": "npx",
    "args": [
      "server-postgres"
    ],
    "packageName": "server-postgres",
    "installType": "npm",
    "tags": [
      "databases",
      "database"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/postgres"
  },
  {
    "id": "server_sqlite_33eb8a15",
    "name": "Server Sqlite",
    "description": "SQLite database operations with built-in analysis features",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "server_sqlite"
    ],
    "packageName": "server-sqlite",
    "installType": "pip",
    "tags": [
      "databases",
      "database"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/sqlite"
  },
  {
    "id": "omniparser_autogui_mcp_6b0c0953",
    "name": "Omniparser Autogui Mcp",
    "description": "\ud83d\udc0d Automatic operation of on-screen GUI.",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "omniparser_autogui_mcp"
    ],
    "packageName": "omniparser-autogui-mcp",
    "installType": "pip",
    "tags": [
      "developer"
    ],
    "sourceUrl": "https://github.com/NON906/omniparser-autogui-mcp"
  },
  {
    "id": "mcp_kibela_83cf482b",
    "name": "Mcp Kibela",
    "description": "\ud83d\udcc7 \u2601\ufe0f Allows AI models to interact with [Kibela](https://kibe.la/)",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-kibela"
    ],
    "packageName": "mcp-kibela",
    "installType": "npm",
    "tags": [
      "developer",
      "web",
      "ai"
    ],
    "sourceUrl": "https://github.com/kj455/mcp-kibela"
  },
  {
    "id": "mcp_graphql_ebdf236b",
    "name": "Mcp Graphql",
    "description": "Allows the AI to query GraphQL servers",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-graphql"
    ],
    "packageName": "mcp-graphql",
    "installType": "npm",
    "tags": [
      "developer",
      "ai"
    ],
    "sourceUrl": "https://github.com/blurrah/mcp-graphql"
  },
  {
    "id": "replicate_flux_mcp_4ac7a1b1",
    "name": "Replicate Flux Mcp",
    "description": "Provides the ability to generate images via Replicate's API.",
    "type": "remote",
    "command": "npx",
    "args": [
      "replicate-flux-mcp"
    ],
    "packageName": "replicate-flux-mcp",
    "installType": "npm",
    "tags": [
      "developer"
    ],
    "sourceUrl": "https://github.com/awkoy/replicate-flux-mcp"
  },
  {
    "id": "server_google_drive_fdc82036",
    "name": "Server Google Drive",
    "description": "Google Drive integration for listing, reading, and searching files",
    "type": "remote",
    "command": "npx",
    "args": [
      "server-google-drive"
    ],
    "packageName": "server-google-drive",
    "installType": "npm",
    "tags": [
      "file",
      "search",
      "files"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/gdrive"
  },
  {
    "id": "quarkus_mcp_servers_f1f0f9ea",
    "name": "Quarkus Mcp Servers",
    "description": "A filesystem allowing for browsing and editing files implemented in Java using Quarkus. Available as jar or native image.",
    "type": "local",
    "command": "java",
    "args": [
      "-jar",
      "quarkus-mcp-servers.jar"
    ],
    "packageName": "quarkus-mcp-servers",
    "installType": "java",
    "tags": [
      "file",
      "files",
      "ai"
    ],
    "sourceUrl": "https://github.com/quarkiverse/quarkus-mcp-servers/tree/main/filesystem"
  },
  {
    "id": "mcp_server_opendal_4cc2a090",
    "name": "Mcp Server Opendal",
    "description": "Access any storage with Apache OpenDAL\u2122",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_server_opendal"
    ],
    "packageName": "mcp-server-opendal",
    "installType": "pip",
    "tags": [
      "file",
      "files"
    ],
    "sourceUrl": "https://github.com/Xuanwo/mcp-server-opendal"
  },
  {
    "id": "coincap_mcp_1f4d988a",
    "name": "Coincap Mcp",
    "description": "Real-time cryptocurrency market data integration using CoinCap's public API",
    "type": "remote",
    "command": "npx",
    "args": [
      "coincap-mcp"
    ],
    "packageName": "coincap-mcp",
    "installType": "npm",
    "tags": [
      "finance"
    ],
    "sourceUrl": "https://github.com/QuantGeekDev/coincap-mcp"
  },
  {
    "id": "coinmarket_mcp_server_6005fa88",
    "name": "Coinmarket Mcp Server",
    "description": "Coinmarket API integration to fetch cryptocurrency listings and quotes",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "coinmarket_mcp_server"
    ],
    "packageName": "coinmarket-mcp-server",
    "installType": "pip",
    "tags": [
      "finance",
      "web"
    ],
    "sourceUrl": "https://github.com/anjor/coinmarket-mcp-server"
  },
  {
    "id": "alpha_vantage_mcp_f34783c0",
    "name": "Alpha Vantage Mcp",
    "description": "Alpha Vantage API integration to fetch both stock and crypto information",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "alpha_vantage_mcp"
    ],
    "packageName": "alpha-vantage-mcp",
    "installType": "pip",
    "tags": [
      "finance",
      "web"
    ],
    "sourceUrl": "https://github.com/berlinbra/alpha-vantage-mcp"
  },
  {
    "id": "tasty_agent_ec4b0bb9",
    "name": "Tasty Agent",
    "description": "Tastyworks API integration to handle trading activities on Tastytrade",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "tasty_agent"
    ],
    "packageName": "tasty-agent",
    "installType": "pip",
    "tags": [
      "finance"
    ],
    "sourceUrl": "https://github.com/ferdousbhai/tasty-agent"
  },
  {
    "id": "investor_agent_7e1534fc",
    "name": "Investor Agent",
    "description": "Yahoo Finance integration to fetch stock market data including options recommendations",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "investor_agent"
    ],
    "packageName": "investor-agent",
    "installType": "pip",
    "tags": [
      "finance",
      "web"
    ],
    "sourceUrl": "https://github.com/ferdousbhai/investor-agent"
  },
  {
    "id": "evm_mcp_server_ebcd6753",
    "name": "Evm Mcp Server",
    "description": "Comprehensive blockchain services for 30+ EVM networks",
    "type": "remote",
    "command": "npx",
    "args": [
      "evm-mcp-server"
    ],
    "packageName": "evm-mcp-server",
    "installType": "npm",
    "tags": [
      "finance",
      "ai"
    ],
    "sourceUrl": "https://github.com/mcpdotdirect/evm-mcp-server"
  },
  {
    "id": "onchain_mcp_986e102a",
    "name": "Onchain Mcp",
    "description": "Bankless Onchain API to interact with smart contracts, query transaction and token information",
    "type": "remote",
    "command": "npx",
    "args": [
      "onchain-mcp"
    ],
    "packageName": "onchain-mcp",
    "installType": "npm",
    "tags": [
      "finance",
      "ai"
    ],
    "sourceUrl": "https://github.com/Bankless/onchain-mcp/"
  },
  {
    "id": "cryptopanic_mcp_server_f6ed5f9b",
    "name": "Cryptopanic Mcp Server",
    "description": "Providing latest cryptocurrency news to AI agents, powered by CryptoPanic.",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "cryptopanic_mcp_server"
    ],
    "packageName": "cryptopanic-mcp-server",
    "installType": "pip",
    "tags": [
      "finance",
      "ai"
    ],
    "sourceUrl": "https://github.com/kukapay/cryptopanic-mcp-server"
  },
  {
    "id": "whale_tracker_mcp_38eaa3d0",
    "name": "Whale Tracker Mcp",
    "description": "A mcp server for tracking cryptocurrency whale transactions.",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "whale_tracker_mcp"
    ],
    "packageName": "whale-tracker-mcp",
    "installType": "pip",
    "tags": [
      "finance"
    ],
    "sourceUrl": "https://github.com/kukapay/whale-tracker-mcp"
  },
  {
    "id": "crypto_feargreed_mcp_c757500c",
    "name": "Crypto Feargreed Mcp",
    "description": "Providing real-time and historical Crypto Fear & Greed Index data.",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "crypto_feargreed_mcp"
    ],
    "packageName": "crypto-feargreed-mcp",
    "installType": "pip",
    "tags": [
      "finance"
    ],
    "sourceUrl": "https://github.com/kukapay/crypto-feargreed-mcp"
  },
  {
    "id": "dune_analytics_mcp_de3f7187",
    "name": "Dune Analytics Mcp",
    "description": "A mcp server that bridges Dune Analytics data to AI agents.",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "dune_analytics_mcp"
    ],
    "packageName": "dune-analytics-mcp",
    "installType": "pip",
    "tags": [
      "finance",
      "ai",
      "analytics"
    ],
    "sourceUrl": "https://github.com/kukapay/dune-analytics-mcp"
  },
  {
    "id": "fantasy_pl_mcp_d81d9358",
    "name": "Fantasy Pl Mcp",
    "description": "An MCP server for real-time Fantasy Premier League data and analysis tools.",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "fantasy_pl_mcp"
    ],
    "packageName": "fantasy-pl-mcp",
    "installType": "pip",
    "tags": [
      "gaming"
    ],
    "sourceUrl": "https://github.com/rishijatia/fantasy-pl-mcp/"
  },
  {
    "id": "server_memory_be3d4dd0",
    "name": "Server Memory",
    "description": "Knowledge graph-based persistent memory system for maintaining context",
    "type": "local",
    "command": "npx",
    "args": [
      "server-memory"
    ],
    "packageName": "server-memory",
    "installType": "npm",
    "tags": [
      "knowledge",
      "ai"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/memory"
  },
  {
    "id": "memorymesh_df0b9f59",
    "name": "Memorymesh",
    "description": "Enhanced graph-based memory with a focus on AI role-play and story generation",
    "type": "local",
    "command": "npx",
    "args": [
      "MemoryMesh"
    ],
    "packageName": "MemoryMesh",
    "installType": "npm",
    "tags": [
      "knowledge",
      "ai"
    ],
    "sourceUrl": "https://github.com/CheMiguel23/MemoryMesh"
  },
  {
    "id": "cognee_962613f8",
    "name": "Cognee",
    "description": "Memory manager for AI apps and Agents using various graph and vector stores",
    "type": "local",
    "command": "npx",
    "args": [
      "cognee"
    ],
    "packageName": "cognee",
    "installType": "npm",
    "tags": [
      "knowledge",
      "ai"
    ],
    "sourceUrl": "https://github.com/topoteretes/cognee/tree/dev/cognee-mcp"
  },
  {
    "id": "mcp_ragdocs_d2b47a97",
    "name": "Mcp Ragdocs",
    "description": "An MCP server implementation that provides tools for retrieving and processing documentation through vector search",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "mcp_ragdocs"
    ],
    "packageName": "mcp-ragdocs",
    "installType": "pip",
    "tags": [
      "knowledge",
      "search"
    ],
    "sourceUrl": "https://github.com/hannesrudolph/mcp-ragdocs"
  },
  {
    "id": "mcp_zotero_e56416b2",
    "name": "Mcp Zotero",
    "description": "A connector for LLMs to work with collections and sources on your Zotero Cloud",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-zotero"
    ],
    "packageName": "mcp-zotero",
    "installType": "npm",
    "tags": [
      "knowledge",
      "ai",
      "cloud"
    ],
    "sourceUrl": "https://github.com/kaliaboi/mcp-zotero"
  },
  {
    "id": "mcp_summarizer_fc6e0c6d",
    "name": "Mcp Summarizer",
    "description": "AI Summarization MCP Server, Support for multiple content types",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-summarizer"
    ],
    "packageName": "mcp-summarizer",
    "installType": "npm",
    "tags": [
      "knowledge",
      "ai"
    ],
    "sourceUrl": "https://github.com/0xshellming/mcp-summarizer"
  },
  {
    "id": "graphlit_mcp_server_a7550d48",
    "name": "Graphlit Mcp Server",
    "description": "Ingest anything from Slack, Discord, websites, Google Drive, Linear or GitHub into a Graphlit project",
    "type": "remote",
    "command": "npx",
    "args": [
      "graphlit-mcp-server"
    ],
    "packageName": "graphlit-mcp-server",
    "installType": "npm",
    "tags": [
      "knowledge",
      "github",
      "search",
      "web",
      "messaging"
    ],
    "sourceUrl": "https://github.com/graphlit/graphlit-mcp-server"
  },
  {
    "id": "server_google_maps_651b3b0e",
    "name": "Server Google Maps",
    "description": "Google Maps integration for location services, routing, and place details",
    "type": "remote",
    "command": "npx",
    "args": [
      "server-google-maps"
    ],
    "packageName": "server-google-maps",
    "installType": "npm",
    "tags": [
      "location",
      "search",
      "ai"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/google-maps"
  },
  {
    "id": "mcp_timeserver_58871cef",
    "name": "Mcp Timeserver",
    "description": "Access the time in any timezone and get the current local time",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "MCP_timeserver"
    ],
    "packageName": "MCP-timeserver",
    "installType": "pip",
    "tags": [
      "location"
    ],
    "sourceUrl": "https://github.com/SecretiveShell/MCP-timeserver"
  },
  {
    "id": "mcp_geo_deab113b",
    "name": "Mcp Geo",
    "description": "Geocoding MCP server for nominatim, ArcGIS, Bing",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "MCP_Geo"
    ],
    "packageName": "MCP-Geo",
    "installType": "pip",
    "tags": [
      "location"
    ],
    "sourceUrl": "https://github.com/webcoderz/MCP-Geo"
  },
  {
    "id": "mcp_server_ipinfo_f7a06fc7",
    "name": "Mcp Server Ipinfo",
    "description": "IP address geolocation and network information using IPInfo API",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_server_ipinfo"
    ],
    "packageName": "mcp-server-ipinfo",
    "installType": "pip",
    "tags": [
      "location"
    ],
    "sourceUrl": "https://github.com/briandconnelly/mcp-server-ipinfo"
  },
  {
    "id": "qgis_mcp_422a6dff",
    "name": "Qgis_Mcp",
    "description": "connects QGIS Desktop to Claude AI through the MCP",
    "type": "local",
    "command": "npx",
    "args": [
      "qgis_mcp"
    ],
    "packageName": "qgis_mcp",
    "installType": "npm",
    "tags": [
      "location",
      "ai"
    ],
    "sourceUrl": "https://github.com/jjsantos01/qgis_mcp"
  },
  {
    "id": "nearby_search_mcp_c8f3976c",
    "name": "Nearby Search Mcp",
    "description": "An MCP server for nearby place searches with IP-based location detection.",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "nearby_search_mcp"
    ],
    "packageName": "nearby-search-mcp",
    "installType": "pip",
    "tags": [
      "location",
      "search"
    ],
    "sourceUrl": "https://github.com/kukapay/nearby-search-mcp"
  },
  {
    "id": "osp_marketing_tools_d57d4fb5",
    "name": "Osp_Marketing_Tools",
    "description": "A suite of marketing tools from Open Strategy Partners including writing style, editing codes, and product marketing value map creation.",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "osp_marketing_tools"
    ],
    "packageName": "osp_marketing_tools",
    "installType": "pip",
    "tags": [
      "marketing"
    ],
    "sourceUrl": "https://github.com/open-strategy-partners/osp_marketing_tools"
  },
  {
    "id": "server_sentry_ba493fbc",
    "name": "Server Sentry",
    "description": "Sentry.io integration for error tracking and performance monitoring",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "server_sentry"
    ],
    "packageName": "server-sentry",
    "installType": "pip",
    "tags": [
      "monitoring"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/sentry"
  },
  {
    "id": "server_raygun_776c1a5d",
    "name": "Server Raygun",
    "description": "Raygun API V3 integration for crash reporting and real user monitoring",
    "type": "remote",
    "command": "npx",
    "args": [
      "server-raygun"
    ],
    "packageName": "server-raygun",
    "installType": "npm",
    "tags": [
      "monitoring"
    ],
    "sourceUrl": "https://github.com/MindscapeHQ/mcp-server-raygun"
  },
  {
    "id": "metoro_mcp_server_1213a031",
    "name": "Metoro Mcp Server",
    "description": "Query and interact with kubernetes environments monitored by Metoro",
    "type": "remote",
    "command": "metoro-mcp-server",
    "args": [],
    "packageName": "metoro-mcp-server",
    "installType": "go",
    "tags": [
      "monitoring"
    ],
    "sourceUrl": "https://github.com/metoro-io/metoro-mcp-server"
  },
  {
    "id": "mcp_grafana_4542c623",
    "name": "Mcp Grafana",
    "description": "Search dashboards, investigate incidents and query datasources in your Grafana instance",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_grafana"
    ],
    "packageName": "mcp-grafana",
    "installType": "pip",
    "tags": [
      "monitoring",
      "search"
    ],
    "sourceUrl": "https://github.com/grafana/mcp-grafana"
  },
  {
    "id": "server_brave_search_bccec656",
    "name": "Server Brave Search",
    "description": "Web search capabilities using Brave's Search API",
    "type": "remote",
    "command": "npx",
    "args": [
      "server-brave-search"
    ],
    "packageName": "server-brave-search",
    "installType": "npm",
    "tags": [
      "search",
      "web"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/brave-search"
  },
  {
    "id": "server_fetch_60107a2d",
    "name": "Server Fetch",
    "description": "Efficient web content fetching and processing for AI consumption",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "server_fetch"
    ],
    "packageName": "server-fetch",
    "installType": "pip",
    "tags": [
      "search",
      "web",
      "ai"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/fetch"
  },
  {
    "id": "mcp_server_tavily_633d3f49",
    "name": "Mcp Server Tavily",
    "description": "MCP Server",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_server_tavily"
    ],
    "packageName": "mcp-server-tavily",
    "installType": "pip",
    "tags": [
      "search"
    ],
    "sourceUrl": "https://github.com/Tomatio13/mcp-server-tavily"
  },
  {
    "id": "mcp_tavily_cb7a8673",
    "name": "Mcp Tavily",
    "description": "MCP Server",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-tavily"
    ],
    "packageName": "mcp-tavily",
    "installType": "npm",
    "tags": [
      "search"
    ],
    "sourceUrl": "https://github.com/kshern/mcp-tavily.git"
  },
  {
    "id": "mcp_dnstwist_4a64decc",
    "name": "Mcp Dnstwist",
    "description": "MCP server for dnstwist, a powerful DNS fuzzing tool",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-dnstwist"
    ],
    "packageName": "mcp-dnstwist",
    "installType": "npm",
    "tags": [
      "security"
    ],
    "sourceUrl": "https://github.com/BurtTheCoder/mcp-dnstwist"
  },
  {
    "id": "mcp_maigret_73084300",
    "name": "Mcp Maigret",
    "description": "MCP server for maigret, a powerful OSINT tool that collects user account information",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-maigret"
    ],
    "packageName": "mcp-maigret",
    "installType": "npm",
    "tags": [
      "security",
      "ai"
    ],
    "sourceUrl": "https://github.com/BurtTheCoder/mcp-maigret"
  },
  {
    "id": "mcp_shodan_562f7b23",
    "name": "Mcp Shodan",
    "description": "MCP server for querying the Shodan API and Shodan CVEDB",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-shodan"
    ],
    "packageName": "mcp-shodan",
    "installType": "npm",
    "tags": [
      "security"
    ],
    "sourceUrl": "https://github.com/BurtTheCoder/mcp-shodan"
  },
  {
    "id": "mcp_virustotal_e76780bf",
    "name": "Mcp Virustotal",
    "description": "MCP server for querying the VirusTotal API",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-virustotal"
    ],
    "packageName": "mcp-virustotal",
    "installType": "npm",
    "tags": [
      "security"
    ],
    "sourceUrl": "https://github.com/BurtTheCoder/mcp-virustotal"
  },
  {
    "id": "mcp_security_0e225bd3",
    "name": "Mcp_Security",
    "description": "MCP server for querying the ORKL API",
    "type": "remote",
    "command": "npx",
    "args": [
      "MCP_Security"
    ],
    "packageName": "MCP_Security",
    "installType": "npm",
    "tags": [
      "security"
    ],
    "sourceUrl": "https://github.com/fr0gger/MCP_Security"
  },
  {
    "id": "mcp_security_audit_b7fb5d1b",
    "name": "Mcp Security Audit",
    "description": "MCP Server",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-security-audit"
    ],
    "packageName": "mcp-security-audit",
    "installType": "npm",
    "tags": [
      "security"
    ],
    "sourceUrl": "https://github.com/qianniuspace/mcp-security-audit"
  },
  {
    "id": "mcp_server_airbnb_5218c1b8",
    "name": "Mcp Server Airbnb",
    "description": "Provides tools to search Airbnb and get listing details",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-server-airbnb"
    ],
    "packageName": "mcp-server-airbnb",
    "installType": "npm",
    "tags": [
      "travel",
      "search",
      "ai"
    ],
    "sourceUrl": "https://github.com/openbnb-org/mcp-server-airbnb"
  },
  {
    "id": "ns_mcp_server_1e7b9a9e",
    "name": "Ns Mcp Server",
    "description": "Access Dutch Railways (NS) travel information, schedules, and real-time updates",
    "type": "remote",
    "command": "npx",
    "args": [
      "ns-mcp-server"
    ],
    "packageName": "ns-mcp-server",
    "installType": "npm",
    "tags": [
      "travel",
      "ai"
    ],
    "sourceUrl": "https://github.com/r-huijts/ns-mcp-server"
  },
  {
    "id": "server_github_45a900c5",
    "name": "Server Github",
    "description": "GitHub API integration for repository management, PRs, issues, and more",
    "type": "remote",
    "command": "npx",
    "args": [
      "server-github"
    ],
    "packageName": "server-github",
    "installType": "npm",
    "tags": [
      "version",
      "github"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/github"
  },
  {
    "id": "server_gitlab_3ec3c9e0",
    "name": "Server Gitlab",
    "description": "GitLab platform integration for project management and CI/CD operations",
    "type": "remote",
    "command": "npx",
    "args": [
      "server-gitlab"
    ],
    "packageName": "server-gitlab",
    "installType": "npm",
    "tags": [
      "version",
      "github"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/gitlab"
  },
  {
    "id": "server_git_ad438525",
    "name": "Server Git",
    "description": "Direct Git repository operations including reading, searching, and analyzing local repositories",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "server_git"
    ],
    "packageName": "server-git",
    "installType": "pip",
    "tags": [
      "version",
      "github",
      "search"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/git"
  },
  {
    "id": "mcp_git_ingest_0c208666",
    "name": "Mcp Git Ingest",
    "description": "Read and analyze GitHub repositories with your LLM",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "mcp_git_ingest"
    ],
    "packageName": "mcp-git-ingest",
    "installType": "pip",
    "tags": [
      "version",
      "github",
      "ai"
    ],
    "sourceUrl": "https://github.com/adhikasp/mcp-git-ingest"
  },
  {
    "id": "actors_mcp_server_91bf85a3",
    "name": "Actors Mcp Server",
    "description": "Use 3,000+ pre-built cloud tools, known as Actors",
    "type": "remote",
    "command": "npx",
    "args": [
      "actors-mcp-server"
    ],
    "packageName": "actors-mcp-server",
    "installType": "npm",
    "tags": [
      "other",
      "cloud"
    ],
    "sourceUrl": "https://github.com/apify/actors-mcp-server"
  },
  {
    "id": "contentful_mcp_b43d3574",
    "name": "Contentful Mcp",
    "description": "Update, create, delete content, content-models and assets in your Contentful Space",
    "type": "local",
    "command": "npx",
    "args": [
      "contentful-mcp"
    ],
    "packageName": "contentful-mcp",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/ivo-toby/contentful-mcp"
  },
  {
    "id": "mcp_openai_4aed3b12",
    "name": "Mcp Openai",
    "description": "Chat with OpenAI's smartest models",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-openai"
    ],
    "packageName": "mcp-openai",
    "installType": "npm",
    "tags": [
      "other",
      "ai",
      "messaging"
    ],
    "sourceUrl": "https://github.com/mzxrai/mcp-openai"
  },
  {
    "id": "godoc_mcp_f926ce99",
    "name": "Godoc Mcp",
    "description": "Token-efficient Go documentation server",
    "type": "local",
    "command": "godoc-mcp",
    "args": [],
    "packageName": "godoc-mcp",
    "installType": "go",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/mrjoshuak/godoc-mcp"
  },
  {
    "id": "mcp_server_openai_1e063001",
    "name": "Mcp Server Openai",
    "description": "Query OpenAI models directly from Claude using MCP protocol",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_server_openai"
    ],
    "packageName": "mcp-server-openai",
    "installType": "pip",
    "tags": [
      "other",
      "ai"
    ],
    "sourceUrl": "https://github.com/pierrebrunelle/mcp-server-openai"
  },
  {
    "id": "server_everything_a66d313c",
    "name": "Server Everything",
    "description": "MCP server that exercises all the features of the MCP protocol",
    "type": "local",
    "command": "npx",
    "args": [
      "server-everything"
    ],
    "packageName": "server-everything",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/modelcontextprotocol/servers/tree/main/src/everything"
  },
  {
    "id": "phabricator_mcp_server_ed61b3ad",
    "name": "Phabricator Mcp Server",
    "description": "Interacting with Phabricator API",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "phabricator_mcp_server"
    ],
    "packageName": "phabricator-mcp-server",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/baba786/phabricator-mcp-server"
  },
  {
    "id": "mcp_obsidian_8e95a6c1",
    "name": "Mcp Obsidian",
    "description": "Interacting with Obsidian via REST API",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_obsidian"
    ],
    "packageName": "mcp-obsidian",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/MarkusPfundstein/mcp-obsidian"
  },
  {
    "id": "mcp_obsidian_6a3776d2",
    "name": "Mcp Obsidian",
    "description": "This is a connector to allow Claude Desktop (or any MCP client) to read and search any directory containing Markdown notes",
    "type": "local",
    "command": "npx",
    "args": [
      "mcp-obsidian"
    ],
    "packageName": "mcp-obsidian",
    "installType": "npm",
    "tags": [
      "other",
      "search",
      "ai"
    ],
    "sourceUrl": "https://github.com/calclavia/mcp-obsidian"
  },
  {
    "id": "mcp_youtube_61dedac7",
    "name": "Mcp Youtube",
    "description": "Fetch YouTube subtitles",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-youtube"
    ],
    "packageName": "mcp-youtube",
    "installType": "npm",
    "tags": [
      "other",
      "web"
    ],
    "sourceUrl": "https://github.com/anaisbetts/mcp-youtube"
  },
  {
    "id": "tiktok_mcp_d726d829",
    "name": "Tiktok Mcp",
    "description": "Interact with TikTok videos",
    "type": "remote",
    "command": "npx",
    "args": [
      "tiktok-mcp"
    ],
    "packageName": "tiktok-mcp",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/Seym0n/tiktok-mcp"
  },
  {
    "id": "notion_mcp_b993c51d",
    "name": "Notion_Mcp",
    "description": "Integrates with Notion's API to manage personal todo lists",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "notion_mcp"
    ],
    "packageName": "notion_mcp",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/danhilse/notion_mcp"
  },
  {
    "id": "wcgw_bb928b0c",
    "name": "Wcgw",
    "description": "Autonomous shell execution, computer control and coding agent (Mac)",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "wcgw"
    ],
    "packageName": "wcgw",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/rusiaaman/wcgw/blob/main/src/wcgw/client/mcp_server/Readme.md"
  },
  {
    "id": "ancestry_mcp_4f813563",
    "name": "Ancestry Mcp",
    "description": "Allows the AI to read .ged files and genetic data",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "ancestry_mcp"
    ],
    "packageName": "ancestry-mcp",
    "installType": "pip",
    "tags": [
      "other",
      "files",
      "ai"
    ],
    "sourceUrl": "https://github.com/reeeeemo/ancestry-mcp"
  },
  {
    "id": "apple_notes_mcp_4bd9dd59",
    "name": "Apple Notes Mcp",
    "description": "Allows the AI to read from your local Apple Notes database (macOS only)",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "apple_notes_mcp"
    ],
    "packageName": "apple-notes-mcp",
    "installType": "pip",
    "tags": [
      "other",
      "database",
      "ai"
    ],
    "sourceUrl": "https://github.com/sirmews/apple-notes-mcp"
  },
  {
    "id": "mcp_notion_server_c1014f75",
    "name": "Mcp Notion Server",
    "description": "Interacting with Notion API",
    "type": "local",
    "command": "npx",
    "args": [
      "mcp-notion-server"
    ],
    "packageName": "mcp-notion-server",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/suekou/mcp-notion-server"
  },
  {
    "id": "unichat_mcp_server_75fb6533",
    "name": "Unichat Mcp Server",
    "description": "Send requests to OpenAI, MistralAI, Anthropic, xAI, Google AI or DeepSeek using MCP protocol",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "unichat_mcp_server"
    ],
    "packageName": "unichat-mcp-server",
    "installType": "pip",
    "tags": [
      "other",
      "search",
      "ai",
      "messaging"
    ],
    "sourceUrl": "https://github.com/amidabuddha/unichat-mcp-server"
  },
  {
    "id": "mcp_miro_ca819fd2",
    "name": "Mcp Miro",
    "description": "Access MIRO whiteboards, bulk create and read items",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-miro"
    ],
    "packageName": "mcp-miro",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/evalstate/mcp-miro"
  },
  {
    "id": "jira_mcp_server_b28743d8",
    "name": "Jira Mcp Server",
    "description": "Get Confluence data via CQL and read pages",
    "type": "remote",
    "command": "npx",
    "args": [
      "jira-mcp-server"
    ],
    "packageName": "jira-mcp-server",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/KS-GEN-AI/jira-mcp-server"
  },
  {
    "id": "confluence_mcp_server_63a05ad9",
    "name": "Confluence Mcp Server",
    "description": "Read jira data via JQL and api and execute requests to create and edit tickets",
    "type": "remote",
    "command": "npx",
    "args": [
      "confluence-mcp-server"
    ],
    "packageName": "confluence-mcp-server",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/KS-GEN-AI/confluence-mcp-server"
  },
  {
    "id": "mcp_atlassian_588d05d9",
    "name": "Mcp Atlassian",
    "description": "MCP server for Atlassian products (Confluence and Jira)",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_atlassian"
    ],
    "packageName": "mcp-atlassian",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/sooperset/mcp-atlassian"
  },
  {
    "id": "any_chat_completions_mcp_4286fb5a",
    "name": "Any Chat Completions Mcp",
    "description": "Chat with any other OpenAI SDK Compatible Chat Completions API",
    "type": "local",
    "command": "npx",
    "args": [
      "any-chat-completions-mcp"
    ],
    "packageName": "any-chat-completions-mcp",
    "installType": "npm",
    "tags": [
      "other",
      "ai",
      "messaging"
    ],
    "sourceUrl": "https://github.com/pyroprompts/any-chat-completions-mcp"
  },
  {
    "id": "mcp_installer_e12a5341",
    "name": "Mcp Installer",
    "description": "An MCP server that installs other MCP servers for you",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "mcp_installer"
    ],
    "packageName": "mcp-installer",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/anaisbetts/mcp-installer"
  },
  {
    "id": "mcp_server_perplexity_0e699e97",
    "name": "Mcp Server Perplexity",
    "description": "Interacting with Perplexity API",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_server_perplexity"
    ],
    "packageName": "mcp-server-perplexity",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/tanigami/mcp-server-perplexity"
  },
  {
    "id": "wikimedia_enterprise_model_context_protocol_883256bb",
    "name": "Wikimedia Enterprise Model Context Protocol",
    "description": "Wikipedia Article lookup API",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "wikimedia_enterprise_model_context_protocol"
    ],
    "packageName": "wikimedia-enterprise-model-context-protocol",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://gitlab.wikimedia.org/repos/future-audiences/wikimedia-enterprise-model-context-protocol"
  },
  {
    "id": "mcp_simple_timeserver_494d301e",
    "name": "Mcp Simple Timeserver",
    "description": "An MCP server that allows checking local time on the client machine or current UTC time from an NTP server",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_simple_timeserver"
    ],
    "packageName": "mcp-simple-timeserver",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/andybrandt/mcp-simple-timeserver"
  },
  {
    "id": "mcp_simple_openai_assistant_3d6c0eb6",
    "name": "Mcp Simple Openai Assistant",
    "description": "\ud83d\udc0d \u2601\ufe0f MCP to talk to OpenAI assistants",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "mcp_simple_openai_assistant"
    ],
    "packageName": "mcp-simple-openai-assistant",
    "installType": "pip",
    "tags": [
      "other",
      "ai"
    ],
    "sourceUrl": "https://github.com/andybrandt/mcp-simple-openai-assistant"
  },
  {
    "id": "mcp_hfspace_6da9cbbf",
    "name": "Mcp Hfspace",
    "description": "Use HuggingFace Spaces directly from Claude",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-hfspace"
    ],
    "packageName": "mcp-hfspace",
    "installType": "npm",
    "tags": [
      "other",
      "ai"
    ],
    "sourceUrl": "https://github.com/evalstate/mcp-hfspace"
  },
  {
    "id": "mcp_manager_b1608d4d",
    "name": "Mcp Manager",
    "description": "Simple Web UI to install and manage MCP servers for Claude Desktop App",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-manager"
    ],
    "packageName": "mcp-manager",
    "installType": "npm",
    "tags": [
      "other",
      "web",
      "ai"
    ],
    "sourceUrl": "https://github.com/zueai/mcp-manager"
  },
  {
    "id": "mcp_cli_6df9076b",
    "name": "Mcp Cli",
    "description": "CLI tool for testing MCP servers",
    "type": "local",
    "command": "npx",
    "args": [
      "mcp-cli"
    ],
    "packageName": "mcp-cli",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/wong2/mcp-cli"
  },
  {
    "id": "mcp_vegalite_server_b798e4d7",
    "name": "Mcp Vegalite Server",
    "description": "Generate visualizations from fetched data using the VegaLite format and renderer",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "mcp_vegalite_server"
    ],
    "packageName": "mcp-vegalite-server",
    "installType": "pip",
    "tags": [
      "other",
      "web"
    ],
    "sourceUrl": "https://github.com/isaacwasserman/mcp-vegalite-server"
  },
  {
    "id": "homeassistant_mcp_57bab020",
    "name": "Homeassistant Mcp",
    "description": "Access Home Assistant data and control devices",
    "type": "local",
    "command": "npx",
    "args": [
      "homeassistant-mcp"
    ],
    "packageName": "homeassistant-mcp",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/tevonsb/homeassistant-mcp"
  },
  {
    "id": "mcp_server_home_assistant_15050280",
    "name": "Mcp Server Home Assistant",
    "description": "Expose all Home Assistant voice intents through a Model Context Protocol Server",
    "type": "local",
    "command": "python",
    "args": [
      "-m",
      "mcp_server_home_assistant"
    ],
    "packageName": "mcp-server-home-assistant",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/allenporter/mcp-server-home-assistant"
  },
  {
    "id": "all_in_one_model_context_protocol_64275ea4",
    "name": "All In One Model Context Protocol",
    "description": "Some useful tools for developer",
    "type": "local",
    "command": "all-in-one-model-context-protocol",
    "args": [],
    "packageName": "all-in-one-model-context-protocol",
    "installType": "go",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/nguyenvanduocit/all-in-one-model-context-protocol"
  },
  {
    "id": "mac_apps_launcher_mcp_server_35b54a94",
    "name": "Mac Apps Launcher Mcp Server",
    "description": "An MCP server to list and launch applications on MacOS",
    "type": "local",
    "command": "npx",
    "args": [
      "mac-apps-launcher-mcp-server"
    ],
    "packageName": "mac-apps-launcher-mcp-server",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/JoshuaRileyDev/mac-apps-launcher"
  },
  {
    "id": "mcp_datetime_a59a11ab",
    "name": "Mcp Datetime",
    "description": "MCP server providing date and time functions in various formats",
    "type": "local",
    "command": "npx",
    "args": [
      "mcp-datetime"
    ],
    "packageName": "mcp-datetime",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/ZeparHyfar/mcp-datetime"
  },
  {
    "id": "mcp_wolfram_alpha_35cb1034",
    "name": "Mcp Wolfram Alpha",
    "description": "An MCP server for querying wolfram alpha API",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "MCP_wolfram_alpha"
    ],
    "packageName": "MCP-wolfram-alpha",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/SecretiveShell/MCP-wolfram-alpha"
  },
  {
    "id": "mcp_server_amazon_bedrock_c49ff723",
    "name": "Mcp Server Amazon Bedrock",
    "description": "Use Amazon Nova Canvas model for image generation",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-server-amazon-bedrock"
    ],
    "packageName": "mcp-server-amazon-bedrock",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/zxkane/mcp-server-amazon-bedrock"
  },
  {
    "id": "piapi_mcp_server_732ddaa6",
    "name": "Piapi Mcp Server",
    "description": "MCP Server",
    "type": "remote",
    "command": "npx",
    "args": [
      "piapi-mcp-server"
    ],
    "packageName": "piapi-mcp-server",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/apinetwork/piapi-mcp-server"
  },
  {
    "id": "difyworkflow_6f1590d1",
    "name": "Difyworkflow",
    "description": "\ud83c\udfce\ufe0f \u2601\ufe0f Tools to the query and execute of Dify workflows",
    "type": "remote",
    "command": "DifyWorkflow",
    "args": [],
    "packageName": "DifyWorkflow",
    "installType": "go",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/gotoolkits/mcp-difyworkflow-server"
  },
  {
    "id": "hn_server_eeb28183",
    "name": "Hn Server",
    "description": "\ud83d\udcc7 \u2601\ufe0f Parses the HTML content from news.ycombinator.com (Hacker News)",
    "type": "remote",
    "command": "npx",
    "args": [
      "hn-server"
    ],
    "packageName": "hn-server",
    "installType": "npm",
    "tags": [
      "other",
      "ai"
    ],
    "sourceUrl": "https://github.com/pskill9/hn-server"
  },
  {
    "id": "screenpipe_c1006d58",
    "name": "Screenpipe",
    "description": "\ud83c\udf96\ufe0f \ud83e\udd80 \ud83c\udfe0 \ud83c\udf4e Local-first system capturing screen/audio with timestamped indexing",
    "type": "local",
    "command": "screenpipe",
    "args": [],
    "packageName": "screenpipe",
    "installType": "cargo",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/mediar-ai/screenpipe"
  },
  {
    "id": "bear_mcp_server_c943e229",
    "name": "Bear Mcp Server",
    "description": "Allows the AI to read from your Bear Notes (macOS only)",
    "type": "local",
    "command": "npx",
    "args": [
      "bear-mcp-server"
    ],
    "packageName": "bear-mcp-server",
    "installType": "npm",
    "tags": [
      "other",
      "ai"
    ],
    "sourceUrl": "https://github.com/akseyh/bear-mcp-server"
  },
  {
    "id": "mcp_server_jfx_19ff5093",
    "name": "Mcp Server Jfx",
    "description": "Draw on JavaFX canvas",
    "type": "local",
    "command": "java",
    "args": [
      "-jar",
      "mcp-server-jfx.jar"
    ],
    "packageName": "mcp-server-jfx",
    "installType": "java",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/quarkiverse/quarkus-mcp-servers/tree/main/jfx"
  },
  {
    "id": "attio_mcp_server_204120fd",
    "name": "Attio Mcp Server",
    "description": "\ud83d\udcc7 \u2601\ufe0f Allows AI clients to manage records and notes in Attio CRM",
    "type": "remote",
    "command": "npx",
    "args": [
      "attio-mcp-server"
    ],
    "packageName": "attio-mcp-server",
    "installType": "npm",
    "tags": [
      "other",
      "ai"
    ],
    "sourceUrl": "https://github.com/hmk/attio-mcp-server"
  },
  {
    "id": "mcp_server_asana_e78a2bc0",
    "name": "Mcp Server Asana",
    "description": "\ud83d\udcc7 \u2601\ufe0f This Model Context Protocol server implementation of Asana",
    "type": "remote",
    "command": "npx",
    "args": [
      "mcp-server-asana"
    ],
    "packageName": "mcp-server-asana",
    "installType": "npm",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/roychri/mcp-server-asana"
  },
  {
    "id": "ws_mcp_1e9d64f7",
    "name": "Ws Mcp",
    "description": "Wrap MCP servers with a WebSocket (for use with [kitbitz](https://github.com/nick1udwig/kibitz))",
    "type": "local",
    "command": "npx",
    "args": [
      "ws-mcp"
    ],
    "packageName": "ws-mcp",
    "installType": "npm",
    "tags": [
      "other",
      "github",
      "web"
    ],
    "sourceUrl": "https://github.com/nick1udwig/ws-mcp"
  },
  {
    "id": "bitcoin_mcp_d6eda02c",
    "name": "Bitcoin Mcp",
    "description": "\u20bf A Model Context Protocol (MCP) server that enables AI models to interact with Bitcoin",
    "type": "local",
    "command": "npx",
    "args": [
      "bitcoin-mcp"
    ],
    "packageName": "bitcoin-mcp",
    "installType": "npm",
    "tags": [
      "other",
      "ai",
      "finance"
    ],
    "sourceUrl": "https://github.com/AbdelStark/bitcoin-mcp"
  },
  {
    "id": "strava_mcp_server_ae27eb60",
    "name": "Strava Mcp Server",
    "description": "An MCP server for Strava, an app for tracking physical exercise",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "strava_mcp_server"
    ],
    "packageName": "strava-mcp-server",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/tomekkorbak/strava-mcp-server"
  },
  {
    "id": "oura_mcp_server_17581e26",
    "name": "Oura Mcp Server",
    "description": "An MCP server for Oura, an app for tracking sleep",
    "type": "remote",
    "command": "python",
    "args": [
      "-m",
      "oura_mcp_server"
    ],
    "packageName": "oura-mcp-server",
    "installType": "pip",
    "tags": [
      "other"
    ],
    "sourceUrl": "https://github.com/tomekkorbak/oura-mcp-server"
  },
  {
    "id": "rember_mcp_99d459f7",
    "name": "Rember Mcp",
    "description": "Create spaced repetition flashcards in [Rember](https://rember.com)",
    "type": "local",
    "command": "npx",
    "args": [
      "rember-mcp"
    ],
    "packageName": "rember-mcp",
    "installType": "npm",
    "tags": [
      "other",
      "web"
    ],
    "sourceUrl": "https://github.com/rember/rember-mcp"
  },
  {
    "id": "raindrop_io_mcp_server_399d1a75",
    "name": "Raindrop Io Mcp Server",
    "description": "An integration that allows LLMs to interact with Raindrop.io bookmarks",
    "type": "remote",
    "command": "npx",
    "args": [
      "raindrop-io-mcp-server"
    ],
    "packageName": "raindrop-io-mcp-server",
    "installType": "npm",
    "tags": [
      "other",
      "ai"
    ],
    "sourceUrl": "https://github.com/hiromitsusasaki/raindrop-io-mcp-server"
  },
  {
    "id": "mcp_server_2cfab131",
    "name": "Mcp Server",
    "description": "Turn your [Make](https://www.make.com/) scenarios into callable tools for AI assistants.",
    "type": "local",
    "command": "npx",
    "args": [
      "mcp-server"
    ],
    "packageName": "mcp-server",
    "installType": "npm",
    "tags": [
      "other",
      "web",
      "ai"
    ],
    "sourceUrl": "https://github.com/integromat/make-mcp-server"
  }
]